{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anastasiia\\\\mp\\\\2\\\\MERN_Login_App_with_ResetEmail-Main\\\\client\\\\src\\\\components\\\\ContentComponents\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const chatRef = useRef(null);\n\n  // Scroll to the bottom when a new message is added\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const message = {\n        id: Date.now(),\n        text: newMessage,\n        sender: 'me' // or 'other' depending on the sender\n      };\n\n      setMessages([...messages, message]);\n      setNewMessage('');\n      // Here you would also send the message to the server via WebSocket\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto space-y-2 p-5\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 max-w-xs rounded-lg ${message.sender === 'me' ? 'ml-auto bg-blue-600 text-white' : 'mr-auto bg-gray-700 text-white'}`,\n        children: message.text\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col bg-gray-900 p-4 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-grow p-2 rounded-l-lg bg-gray-800 text-white border border-gray-700 focus:outline-none\",\n          placeholder: \"Type your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"bg-blue-600 text-white p-2 rounded-r-lg hover:bg-blue-700\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"rtKlTFlnBnUJpJbieyIf5c6ih9I=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chat","messages","setMessages","newMessage","setNewMessage","chatRef","current","scrollIntoView","behavior","handleSendMessage","trim","message","id","Date","now","text","sender","map","e","target","value","key"],"sources":["C:/Users/anastasiia/mp/2/MERN_Login_App_with_ResetEmail-Main/client/src/components/ContentComponents/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const chatRef = useRef(null);\n\n  // Scroll to the bottom when a new message is added\n  useEffect(() => {\n    chatRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const message = {\n        id: Date.now(),\n        text: newMessage,\n        sender: 'me', // or 'other' depending on the sender\n      };\n      setMessages([...messages, message]);\n      setNewMessage('');\n      // Here you would also send the message to the server via WebSocket\n    }\n  };\n\n  return (\n    <>\n    <div className=\"flex-grow overflow-y-auto space-y-2 p-5\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`p-2 max-w-xs rounded-lg ${\n              message.sender === 'me' ? 'ml-auto bg-blue-600 text-white' : 'mr-auto bg-gray-700 text-white'\n            }`}\n          >\n            {message.text}\n          </div>\n        ))}\n        <div ref={chatRef} />\n      </div>\n    <div className=\"flex flex-col bg-gray-900 p-4 rounded-lg\">\n      {/* Messages Container */}\n      \n\n      {/* Input and Send Button */}\n      <div className=\"mt-4 flex\">\n        <input\n          type=\"text\"\n          className=\"flex-grow p-2 rounded-l-lg bg-gray-800 text-white border border-gray-700 focus:outline-none\"\n          placeholder=\"Type your message...\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\n        />\n        <button\n          onClick={handleSendMessage}\n          className=\"bg-blue-600 text-white p-2 rounded-r-lg hover:bg-blue-700\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAAA;AAE3D,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMQ,OAAO,GAAGN,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACAD,SAAS,CAAC,MAAM;IAAA;IACd,oBAAAO,OAAO,CAACC,OAAO,qDAAf,iBAAiBC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACzD,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMQ,iBAAiB,GAAG,MAAM;IAC9B,IAAIN,UAAU,CAACO,IAAI,EAAE,EAAE;MACrB,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;QACdC,IAAI,EAAEZ,UAAU;QAChBa,MAAM,EAAE,IAAI,CAAE;MAChB,CAAC;;MACDd,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEU,OAAO,CAAC,CAAC;MACnCP,aAAa,CAAC,EAAE,CAAC;MACjB;IACF;EACF,CAAC;;EAED,oBACE;IAAA,wBACA;MAAK,SAAS,EAAC,yCAAyC;MAAA,WACnDH,QAAQ,CAACgB,GAAG,CAAEN,OAAO,iBACpB;QAEE,SAAS,EAAG,2BACVA,OAAO,CAACK,MAAM,KAAK,IAAI,GAAG,gCAAgC,GAAG,gCAC9D,EAAE;QAAA,UAEFL,OAAO,CAACI;MAAI,GALRJ,OAAO,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAOlB,CAAC,eACF;QAAK,GAAG,EAAEP;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACjB,eACR;MAAK,SAAS,EAAC,0CAA0C;MAAA,uBAKvD;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UACE,IAAI,EAAC,MAAM;UACX,SAAS,EAAC,6FAA6F;UACvG,WAAW,EAAC,sBAAsB;UAClC,KAAK,EAAEF,UAAW;UAClB,QAAQ,EAAGe,CAAC,IAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAC/C,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIZ,iBAAiB;QAAG;UAAA;UAAA;UAAA;QAAA,QAC3D,eACF;UACE,OAAO,EAAEA,iBAAkB;UAC3B,SAAS,EAAC,2DAA2D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAG9D;MAAA;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACH;AAEP;AAAC,GA9DQT,IAAI;AAAA,KAAJA,IAAI;AAgEb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}