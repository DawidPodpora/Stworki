{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Barnaba\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport Menu from './Menu.js'; // Import komponentu Menu\nimport Options from './Options.js'; // Import komponentu Options\nimport Content from './Content.js'; // Import komponentu Content\nimport React, { useState } from 'react'; // Import React i hooka useState do zarządzania stanem\n\n// Główny komponent strony\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  // Stan dla widoczności panelu opcji\n  const [isOptionsVisible, setOptionsVisible] = useState(false);\n\n  // Stan dla aktualnie wybranego przycisku w menu\n  const [selectedButton, setSelectedButton] = useState(1);\n\n  // Funkcja do przełączania widoczności opcji\n  const toggleOptionVisibility = () => {\n    setOptionsVisible(prevState => !prevState); // Odwrócenie obecnego stanu (true <-> false)\n  };\n\n  // Funkcja do obsługi kliknięcia przycisku w menu\n  const handleButtonClick = buttonNumber => {\n    setSelectedButton(buttonNumber); // Ustawienie wybranego numeru przycisku\n  };\n\n  // Wygląd strony\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-maincolor1 absolute h-screen w-screen flex\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      toogleOptions: toggleOptionVisibility // Przekazanie funkcji przełączania opcji\n      ,\n      onButtonClick: handleButtonClick // Przekazanie funkcji obsługi kliknięcia przycisku\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      selectedButton: selectedButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isOptionsVisible && /*#__PURE__*/_jsxDEV(Options, {\n      toogleOptions: toggleOptionVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) // Przekazanie funkcji zamykania opcji\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"Uucbi0pQ/d+W/NJWCS7DzlJKAR8=\");\n_c = MainPage;\nexport default MainPage; // Eksport głównego komponentu\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["Menu","Options","Content","React","useState","MainPage","isOptionsVisible","setOptionsVisible","selectedButton","setSelectedButton","toggleOptionVisibility","prevState","handleButtonClick","buttonNumber"],"sources":["C:/Users/Barnaba/Desktop/project/client/src/components/MainPage.js"],"sourcesContent":["import Menu from './Menu.js'; // Import komponentu Menu\nimport Options from './Options.js'; // Import komponentu Options\nimport Content from './Content.js'; // Import komponentu Content\nimport React, { useState } from 'react'; // Import React i hooka useState do zarządzania stanem\n\n// Główny komponent strony\nfunction MainPage() {\n  // Stan dla widoczności panelu opcji\n  const [isOptionsVisible, setOptionsVisible] = useState(false);\n  \n  // Stan dla aktualnie wybranego przycisku w menu\n  const [selectedButton, setSelectedButton] = useState(1);\n\n  // Funkcja do przełączania widoczności opcji\n  const toggleOptionVisibility = () => {\n    setOptionsVisible((prevState) => !prevState); // Odwrócenie obecnego stanu (true <-> false)\n  };\n\n  // Funkcja do obsługi kliknięcia przycisku w menu\n  const handleButtonClick = (buttonNumber) => {\n    setSelectedButton(buttonNumber); // Ustawienie wybranego numeru przycisku\n  };\n\n  // Wygląd strony\n  return (\n    <div className=\"bg-maincolor1 absolute h-screen w-screen flex\">\n      {/* Komponent menu */}\n      <Menu \n        toogleOptions={toggleOptionVisibility} // Przekazanie funkcji przełączania opcji\n        onButtonClick={handleButtonClick} // Przekazanie funkcji obsługi kliknięcia przycisku\n      />\n\n      {/* Komponent treści, wyświetlający zawartość na podstawie wybranego przycisku */}\n      <Content selectedButton={selectedButton} />\n\n      {/* Warunkowe wyświetlanie panelu opcji */}\n      {isOptionsVisible && (\n        <Options toogleOptions={toggleOptionVisibility} /> // Przekazanie funkcji zamykania opcji\n      )}\n    </div>\n  );\n}\n\nexport default MainPage; // Eksport głównego komponentu\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,WAAW,CAAC,CAAC;AAC9B,OAAOC,OAAO,MAAM,cAAc,CAAC,CAAC;AACpC,OAAOC,OAAO,MAAM,cAAc,CAAC,CAAC;AACpC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;;AAEzC;AAAA;AACA,SAASC,QAAQ,GAAG;EAAA;EAClB;EACA,MAAM,CAACC,gBAAgB,EAAEC,iBAAiB,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMM,sBAAsB,GAAG,MAAM;IACnCH,iBAAiB,CAAEI,SAAS,IAAK,CAACA,SAAS,CAAC,CAAC,CAAC;EAChD,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,YAAY,IAAK;IAC1CJ,iBAAiB,CAACI,YAAY,CAAC,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,oBACE;IAAK,SAAS,EAAC,+CAA+C;IAAA,wBAE5D,QAAC,IAAI;MACH,aAAa,EAAEH,sBAAuB,CAAC;MAAA;MACvC,aAAa,EAAEE,iBAAkB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eAGF,QAAC,OAAO;MAAC,cAAc,EAAEJ;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,EAG1CF,gBAAgB,iBACf,QAAC,OAAO;MAAC,aAAa,EAAEI;IAAuB;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;IACpD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAnCQL,QAAQ;AAAA,KAARA,QAAQ;AAqCjB,eAAeA,QAAQ,CAAC,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}