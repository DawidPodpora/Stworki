[{"C:\\Users\\48664\\Desktop\\project\\client\\src\\index.js":"1","C:\\Users\\48664\\Desktop\\project\\client\\src\\App.js":"2","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Password.js":"3","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Username.js":"4","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Register.js":"5","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Profile.js":"6","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Reset.js":"7","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Recovery.js":"8","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\PageNotFound.js":"9","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\MainPage.js":"10","C:\\Users\\48664\\Desktop\\project\\client\\src\\middleware\\auth.js":"11","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\StartPage.js":"12","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Menu.js":"13","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Options.js":"14","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Content.js":"15","C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\helper.js":"16","C:\\Users\\48664\\Desktop\\project\\client\\src\\store\\store.js":"17","C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\validate.js":"18","C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\convert.js":"19","C:\\Users\\48664\\Desktop\\project\\client\\src\\hooks\\fetch.hook.js":"20","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Chat.js":"21","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Notice.js":"22","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\TestButton2.js":"23","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\TestButton3.js":"24","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\PrivateMessages.js":"25","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\FirstOrb.js":"26","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\NewCreatureWindow.js":"27","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\MarketPage.js":"28","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\RequireAuth.js":"29","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\FightScreen.js":"30","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\RedirectIfLoggedIn.js":"31","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Misions.js":"32","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildView.js":"33","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildDetails.js":"34","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildInvitations.js":"35","C:\\Users\\48664\\Desktop\\project\\client\\src\\i18n.js":"36"},{"size":247,"mtime":1737385543193,"results":"37","hashOfConfig":"38"},{"size":3220,"mtime":1737315303854,"results":"39","hashOfConfig":"38"},{"size":5031,"mtime":1737315303862,"results":"40","hashOfConfig":"38"},{"size":2967,"mtime":1737315303866,"results":"41","hashOfConfig":"38"},{"size":3825,"mtime":1737315303864,"results":"42","hashOfConfig":"38"},{"size":6221,"mtime":1733462294000,"results":"43","hashOfConfig":"38"},{"size":4539,"mtime":1737315303866,"results":"44","hashOfConfig":"38"},{"size":4507,"mtime":1737315303863,"results":"45","hashOfConfig":"38"},{"size":113,"mtime":1731339676000,"results":"46","hashOfConfig":"38"},{"size":4792,"mtime":1737315303861,"results":"47","hashOfConfig":"38"},{"size":1623,"mtime":1737315303867,"results":"48","hashOfConfig":"38"},{"size":4929,"mtime":1737388057255,"results":"49","hashOfConfig":"38"},{"size":3874,"mtime":1737384729415,"results":"50","hashOfConfig":"38"},{"size":2399,"mtime":1737384063784,"results":"51","hashOfConfig":"38"},{"size":2181,"mtime":1737382775787,"results":"52","hashOfConfig":"38"},{"size":5662,"mtime":1733464357000,"results":"53","hashOfConfig":"38"},{"size":721,"mtime":1733462113000,"results":"54","hashOfConfig":"38"},{"size":4047,"mtime":1733462017000,"results":"55","hashOfConfig":"38"},{"size":711,"mtime":1733461908000,"results":"56","hashOfConfig":"38"},{"size":2671,"mtime":1733462052000,"results":"57","hashOfConfig":"38"},{"size":3317,"mtime":1737392499557,"results":"58","hashOfConfig":"38"},{"size":650,"mtime":1736542038798,"results":"59","hashOfConfig":"38"},{"size":21339,"mtime":1737401022398,"results":"60","hashOfConfig":"38"},{"size":12820,"mtime":1737397383961,"results":"61","hashOfConfig":"38"},{"size":17103,"mtime":1737400247576,"results":"62","hashOfConfig":"38"},{"size":3287,"mtime":1736610062972,"results":"63","hashOfConfig":"38"},{"size":4140,"mtime":1736450057831,"results":"64","hashOfConfig":"38"},{"size":21702,"mtime":1737410735997,"results":"65","hashOfConfig":"38"},{"size":365,"mtime":1737315303865,"results":"66","hashOfConfig":"38"},{"size":9298,"mtime":1737374403454,"results":"67","hashOfConfig":"38"},{"size":728,"mtime":1737315303864,"results":"68","hashOfConfig":"38"},{"size":11818,"mtime":1737410922245,"results":"69","hashOfConfig":"38"},{"size":17583,"mtime":1737374403453,"results":"70","hashOfConfig":"38"},{"size":9506,"mtime":1737374403452,"results":"71","hashOfConfig":"38"},{"size":5437,"mtime":1737374403452,"results":"72","hashOfConfig":"38"},{"size":18668,"mtime":1737467791684,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e4jrjj",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"80"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"80"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"80"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\48664\\Desktop\\project\\client\\src\\index.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\App.js",[],[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Password.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Username.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Register.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Profile.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Reset.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Recovery.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\PageNotFound.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\MainPage.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\middleware\\auth.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\StartPage.js",["188"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Menu.js",["189","190"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Options.js",["191","192"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Content.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\helper.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\store\\store.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\validate.js",[],["193","194"],"C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\convert.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\hooks\\fetch.hook.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Chat.js",["195"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Notice.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\TestButton2.js",["196","197","198"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\TestButton3.js",["199","200","201","202"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\PrivateMessages.js",["203"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\FirstOrb.js",["204","205"],[],"import React, { useState } from 'react'; // Import biblioteki React\r\nimport { useTranslation } from 'react-i18next'; // Import hooka `useTranslation` z biblioteki do obsługi tłumaczeń\r\n\r\n// Komponent `Options`, który obsługuje wybór języka i posiada przycisk zamykający okno opcji\r\nfunction FirstOrb({firsOrbActiveButton,  NewCreatureActiveButton}) {\r\n  const { i18n } = useTranslation(); // Inicjalizacja tłumaczeń z `react-i18next`\r\n  const [choice, setChoice] = useState(null);\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n    const elements=[\r\n        \"water\",\r\n        \"fire\",\r\n        \"nature\",\r\n        \"light\",\r\n        \"dark\",\r\n    ]\r\n  // Funkcja obsługująca zmianę języka\r\n  const handleLanguageChange = (e) => {\r\n    i18n.changeLanguage(e.target.value); // Zmiana języka na wybrany w select\r\n  };\r\n  const orbChecked =(element)=>{\r\n    setChoice(element);\r\n  }\r\n  const sendFirstOrb = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        console.warn('Brak tokenu w localStorage');\r\n        return;\r\n    }\r\n    console.log(\"cos\");\r\n    try{\r\n        console.log(\"cos1\");\r\n        const response = await fetch('http://localhost:8080/api/OrbDraw',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({orb: choice}),\r\n        });\r\n        console.log(\"cos2\");\r\n        if (!response.ok) {\r\n            throw new Error(`Błąd ${response.status}: ${response.statusText}`);\r\n          }\r\n        const data = await response.json();\r\n        return data;\r\n    }catch(error){\r\n        console.error('Błąd podczas wysyłania danych:', error);\r\n        setResponseMessage('Wystąpił błąd podczas wysyłania danych.');\r\n    }\r\n    \r\n  };\r\n  const doubleFunctionClick = () =>\r\n  {\r\n    if(choice)\r\n    {\r\n        console.log(\"działa\");\r\n       \r\n        firsOrbActiveButton();\r\n        sendFirstOrb().then((response)=>{\r\n          NewCreatureActiveButton(response.NewCreature);\r\n        })\r\n    }\r\n  }\r\n  // Wygląd i logika komponentu\r\n  return (\r\n    <div className=\"absolute bg-black1 bg-opacity-90 w-full h-screen items-center flex flex-col justify-center\">\r\n      <div className=\"relative bg-maincolor1 w-3/4 h-[25vw] mt-[10vh] text-maincolor4  rounded-3xl border-2 p-4 flex flex-col justify-between text-2xl items-center\">\r\n      <div className=\"flex justify-between w-full h-2/3 items-center bg-black px-8  rounded-3xl bg-opacity-70\">\r\n        {elements.map((element, index) =>\r\n        <button onClick ={()=> orbChecked(element)}className={`w-1/6 h-[11.5vw] rounded-full hover:shadow-custom-main hover:bg-maincolor4 ${choice === element?\r\n            \"shadow-custom-main bg-maincolor4\":\"\"\r\n        }`}>\r\n    \r\n            <img src={`images/${element}orb.png`} alt={element}/>\r\n        </button>\r\n        )}\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <button onClick={doubleFunctionClick} className=\"px-9 py-2 bg-maincolor5 text-black1 rounded-lg hover:bg-maincolor4 transition\">\r\n            OK\r\n          </button>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FirstOrb; // Eksport komponentu","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\NewCreatureWindow.js",["206","207","208"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next'; // Import hooka `useTranslation` z biblioteki do obsługi tłumaczeń\r\n\r\n// Komponent `Options`, który obsługuje wybór języka i posiada przycisk zamykający okno opcji\r\nfunction NewCreatureWindow({ newCreatureData , windowSwicher}) {\r\n  const { i18n } = useTranslation(); // Inicjalizacja tłumaczeń z `react-i18next`\r\n    const [photoName, setPhotoName] = useState(null);\r\n    const [name,setName] = useState();\r\n  // Funkcja obsługująca zmianę języka\r\n  const handleLanguageChange = (e) => {\r\n    i18n.changeLanguage(e.target.value); // Zmiana języka na wybrany w select\r\n  };\r\n  useEffect(() => {\r\n        const fetchSpeciesPhoto = async () => {\r\n            const token = localStorage.getItem('token'); // Pobranie tokena z localStorage\r\n            if (!token) {\r\n                console.warn('Brak tokenu w localStorage');\r\n                return;\r\n            }\r\n    \r\n            try {\r\n                const response = await fetch(`http://localhost:8080/api/speciesPhoto?speciesName=${newCreatureData.species}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`, // Wysłanie tokena w nagłówku\r\n                    },\r\n                });\r\n    \r\n                if (!response.ok) {\r\n                    console.error('Błąd pobierania danych obrazka:', response.statusText);\r\n                    return;\r\n                }\r\n                \r\n                const photo = await response.json();\r\n                setPhotoName(photo.photoName);\r\n                console.log(photoName);\r\n            } catch (error) {\r\n                console.error('Błąd podczas pobierania danych obrazka:', error);\r\n            }\r\n  \r\n        };\r\n    \r\n        fetchSpeciesPhoto(); // Wywołanie funkcji\r\n    }, []);\r\n    const sendNewName = async()=>\r\n    {\r\n        const token = localStorage.getItem('token'); // Pobranie tokena z localStorage\r\n            if (!token) {\r\n                console.warn('Brak tokenu w localStorage');\r\n                return;\r\n            }\r\n            try{\r\n                const response = await fetch('http://localhost:8080/api/setNewName',{\r\n                    method: 'POST',\r\n                    headers:{\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({newName: name,\r\n                    creatureid: newCreatureData._id\r\n                    }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`Błąd ${response.status}: ${response.statusText}`);\r\n                  }\r\n            }catch(error){\r\n                console.error('Błąd podczas wysyłania danych:', error);\r\n            }\r\n\r\n    }\r\n    const okClickActions = () =>\r\n    {\r\n        windowSwicher();\r\n        sendNewName();\r\n    }\r\n  // Wygląd i logika komponentu\r\n  return (\r\n    <div className=\"absolute bg-black1 bg-opacity-90 w-full h-screen items-center flex flex-col\">\r\n      {/* Główne okno opcji */}\r\n      <div className=\"relative bg-maincolor1 w-1/2 h-2/3 mt-[10vh] text-maincolor4 flex flex-col items-center rounded-3xl border-2 text-2xl space-y-4\">\r\n        {newCreatureData.species}\r\n        <div className=\"relative h-[27vw] aspect-square bg-black1 rounded-xl border-maincolor5 border-2\">\r\n        {photoName &&(\r\n        <img src={`images/${photoName}.png` } className=\"absolute w-full h-full object-cover rounded-xl\"/>\r\n        )\r\n        }\r\n        </div>\r\n        Nadaj imie:\r\n        <input type=\"text\" value={name} onChange={(e)=> setName(e.target.value)} className='bg-black text-maincolor4 border border-maincolor5 rounded-xl'/>\r\n        <button onClick={okClickActions} className='bottom-10 border-2 rounded-3xl w-1/6 border-maincolor5 hover:shadow-maincolor5 shadow-buttonshadow transition duration-300 hover:text-maincolor5'>OK</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCreatureWindow; // Eksport komponentu","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\MarketPage.js",["209","210","211"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\RequireAuth.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\FightScreen.js",["212","213","214","215","216","217","218","219"],[],"import React, { useState, useEffect,useRef } from 'react'\r\nimport create from 'zustand';\r\n\r\nfunction FightScreen({creatureFightData, creatureFightCloseButton}){\r\n    const [visibleItems, setVisibleItems] = useState(0);\r\n    const fullFightLenght = creatureFightData.fight.fightData.creature1.info.length + creatureFightData.fight.fightData.creature2.info.length;\r\n    const [creature1ActualHp ,setCreature1ActualHp] = useState(creatureFightData.fight.fullhpcreature1);\r\n    const [creature2ActualHp ,setCreature2ActualHp] = useState(creatureFightData.fight.fullhpcreature2);\r\n    const [infoSpeed, setInfoSpeed] = useState(1000);\r\n    const scrollRef = useRef(null);\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        if (visibleItems < fullFightLenght) {\r\n            const timer = setTimeout(() => {\r\n                setVisibleItems((prev) => prev + 1);\r\n                if(visibleItems%2 === 0)\r\n                {\r\n                    changeCreature2Life(creatureFightData.fight.fightData.creature1.dmg[visibleItems/2])\r\n                }\r\n                else\r\n                {\r\n                    changeCreature1Life(creatureFightData.fight.fightData.creature2.dmg[Math.floor(visibleItems/2)])\r\n                }\r\n            }, infoSpeed); // Zwiększa licznik co sekundę\r\n            \r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [visibleItems, creatureFightData.fight.fightData.creature1.info.length]);\r\n    useEffect(() => {\r\n        if (scrollRef.current) {\r\n          scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n        }\r\n      }, [visibleItems]);\r\n    const SkipClick=()=>{\r\n        setInfoSpeed(10);\r\n    }\r\n    const changeCreature1Life =(life)=>\r\n    {\r\n        if(creature1ActualHp - life >=0){\r\n        setCreature1ActualHp(creature1ActualHp - life);\r\n        }else(setCreature1ActualHp(0))\r\n    }\r\n    const changeCreature2Life =(life)=>\r\n    {\r\n        if(creature2ActualHp - life >=0){\r\n            setCreature2ActualHp(creature2ActualHp - life);\r\n            }else(setCreature2ActualHp(0));\r\n    }\r\n    return(<div className=\"absolute bg-black1 bg-opacity-90 w-full h-screen items-center flex flex-col\">\r\n        <div className=\"relative w-[85vw] h-[65vh] mt-[10vw] items-center justify-center text-maincolor4 flex rounded-3xl z-10 \">\r\n            {/*Panel ze zdjęciami*/}\r\n            \r\n            <div className='absolute mt-[1vw] top-0 left-1/2 transform -translate-x-1/2 w-[83vw] h-[32vw] '>\r\n                <div className='h-full aspect-square border-4 border-maincolor2 left-0 rounded-3xl '>\r\n                    <img src={`images/${creatureFightData.speciesPhotos[0][0]}.png`} className='rounded-2xl'></img>\r\n                </div>\r\n                <div className='absolute h-full aspect-square border-4 border-maincolor5 right-0 top-0 rounded-3xl'>\r\n                    <img src={`images/${creatureFightData.speciesPhotos[1][0]}.png`} className='rounded-2xl'></img>\r\n                </div>\r\n            </div>\r\n            {/*Panel z informacjami */}\r\n            <div className=' p-2 absolute left-1/2 transform -translate-x-1/2 top-0 mt-[1vw]  w-[16vw] h-[57vh] bg-gradient-to-r from-maincolor2 via-black to-maincolor5 rounded-3xl '>\r\n                <div   ref={scrollRef} className='w-full h-full bg-black rounded-2xl overflow-y-auto scrollbar-thin scrollbar-thumb-maincolor5 scrollbar-track-black'>\r\n                {Array.from({ length: visibleItems }).map((_, index)=>(\r\n                    <div key={index}>\r\n                        {index%2===0 ?(\r\n                            <>\r\n                            {creatureFightData.fight.fightData.creature1.info[index/2] === \"Dodge\"?(\r\n                        <div className='relative w-full h-[2hw]  p-1 flex justify-between'>\r\n                            <div  className='text-maincolor3'>Atak for 0</div>\r\n                            <div className='text-maincolor5  '>{creatureFightData.fight.fightData.creature1.info[index/2]}</div>\r\n                        </div>\r\n                    ):(<div className='relative w-full h-[2hw]  p-1'><div className='text-maincolor3'>{creatureFightData.fight.fightData.creature1.info[index/2]}  {creatureFightData.fight.fightData.creature1.dmg[index/2]}</div></div>)\r\n                    }\r\n                            </>\r\n                ):(\r\n                    <>\r\n                    {creatureFightData.fight.fightData.creature2.info[Math.floor(index/2)] === \"Dodge\"?(\r\n                        <div className='relative w-full h-[2hw]  p-1 flex justify-between'>\r\n                            <div className='text-maincolor3  '>{creatureFightData.fight.fightData.creature2.info[Math.floor(index/2)]}</div>\r\n                            <div  className='text-maincolor5 '>Atak for 0</div>\r\n                        </div>\r\n                    ):(<div className='relative w-full h-[2hw] p-1'><div className='flex items-center justify-end text-maincolor5'>{creatureFightData.fight.fightData.creature2.info[Math.floor(index/2)]}  {creatureFightData.fight.fightData.creature2.dmg[Math.floor(index/2)]}</div></div>)\r\n                    \r\n                    }\r\n                    </>)}\r\n                    </div>\r\n                ))}\r\n                    {visibleItems === fullFightLenght &&(\r\n                        <div className='w-full h-[2hw] relative'>{creatureFightData.fight.whoWon === \"c1\"?(\r\n                            <>\r\n                            <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 '>You Win</div>\r\n                            <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 mt-[2vh] flex items-center'><img className='w-[2vw] h-full' src=\"images/money.png\"></img><p>{creatureFightData.gold}</p>{creatureFightData.bonusGold > 0 &&(<span className='ml-2 text-green-300'>+ {creatureFightData.bonusGold} </span>)}</div>\r\n                            <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 mt-[5vh] flex items-center'><img className='w-[2vw] h-full' src=\"images/experience.png\"></img><p>{creatureFightData.exp}</p>{creatureFightData.bonusExp > 0 && (<span className='ml-2 text-green-300'>+ {creatureFightData.bonusExp}</span>)}</div>\r\n                                </>\r\n                        ):(<>\r\n                        <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 '>You Lose</div>\r\n                            <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 mt-[2vh] flex items-center'><img className='w-[2vw] h-full' src=\"images/money.png\"></img><p>{creatureFightData.gold}</p>{creatureFightData.bonusGold > 0 &&(<span className='ml-2 text-green-300'>+ {creatureFightData.bonusGold}</span>)}</div>\r\n                            <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 mt-[5vh] flex items-center'><img className='w-[2vw] h-full' src=\"images/experience.png\"></img><p>{creatureFightData.exp}</p>{creatureFightData.bonusExp > 0 && (<span className='ml-2 text-green-300'>+ {creatureFightData.bonusExp}</span>)}</div>\r\n                            </>)}</div>\r\n                    )\r\n                    }\r\n                   \r\n                    {console.log(fullFightLenght)}\r\n                </div>\r\n            </div>\r\n            {visibleItems !== fullFightLenght ? (\r\n                <button onClick={()=>SkipClick()}className='absolute left-1/2 transform -translate-x-1/2 bottom-[0.1vw] w-[10vw] h-[4.5vh] bg-gradient-to-r from-maincolor3 to-maincolor5 mb-1 rounded-full border-4 border-black'>SKIP</button>\r\n            ):(\r\n                <button onClick={()=>creatureFightCloseButton()}className='absolute left-1/2 transform -translate-x-1/2 bottom-[0.1vw] w-[10vw] h-[4.5vh] bg-gradient-to-r from-maincolor3 to-maincolor5 mb-1 rounded-full border-4 border-black'>ACCEPT</button> \r\n            )\r\n            }\r\n            <div className='absolute left-[2vw] bottom-[0.8vh]  w-[30vw] h-[4.5vh] border-4 border-maincolor4 rounded-2xl'>\r\n                <div className='w-full h-full bg-maincolor3 rounded-lg relative'>\r\n                    <div className='h-full bg-maincolor4 rounded-lg' style={{width:`${(creatureFightData.fight.fullhpcreature1-creature1ActualHp)/creatureFightData.fight.fullhpcreature1 * 100}%`}}></div>\r\n                </div>\r\n                <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10 text-black'>{creature1ActualHp}/{creatureFightData.fight.fullhpcreature1}</div>\r\n            </div>\r\n           \r\n                     \r\n            <div className='absolute right-[2vw] bottom-[0.8vh]  w-[30vw] h-[4.5vh] border-4 border-maincolor4 rounded-2xl'>\r\n                <div className='w-full h-full bg-maincolor5 rounded-lg relative '>\r\n                    <div className=' absolute h-full bg-maincolor4 rounded-lg right-0' \r\n                    style={{width:`${(creatureFightData.fight.fullhpcreature2-creature2ActualHp)/creatureFightData.fight.fullhpcreature2 *100}%`}}></div>\r\n                    <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10 text-black'>{creature2ActualHp}/{creatureFightData.fight.fullhpcreature2}</div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>)\r\n}\r\nexport default FightScreen;","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\RedirectIfLoggedIn.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Misions.js",["220","221","222","223","224","225","226","227","228","229"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildView.js",["230"],[],"import React, { useState, useEffect } from 'react';\r\nimport GuildDetails from './GuildDetails';\r\nimport GuildInvitations from './GuildInvitations';\r\n\r\nfunction GuildView() {\r\n    const [guilds, setGuilds] = useState([]);\r\n    const [selectedGuild, setSelectedGuild] = useState(null);\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n    const [newGuildName, setNewGuildName] = useState('');\r\n    const [newGuildGoal, setNewGuildGoal] = useState('');\r\n    const [newGuildMaxMembers, setNewGuildMaxMembers] = useState(10);\r\n    const [newGuildExpBonus, setNewGuildExpBonus] = useState(1);\r\n    const [newGuildGoldBonus, setNewGuildGoldBonus] = useState(1);\r\n    const [userExp, setUserExp] = useState(0);\r\n    const [userGold, setUserGold] = useState(0);\r\n    const userId = localStorage.getItem('userId');\r\n    const [userTezaInput, setUserTezaInput] = useState(\"\");\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            console.error('userId jest null! Użytkownik musi być zalogowany.');\r\n            console.log('Dostępne wartości localStorage:', localStorage);\r\n            console.log('Token:', localStorage.getItem('token'));\r\n            console.log('UserId:', localStorage.getItem('userId'));\r\n            return;\r\n        }\r\n        console.log('userId w localStorage:', userId); \r\n        fetchUserData();\r\n        fetchGuilds();\r\n        fetchOnlineUsers();\r\n\r\n        // Ustawienie interwału do odświeżania listy użytkowników online co 5 sekund\r\n        const intervalId = setInterval(fetchOnlineUsers, 5000);\r\n\r\n        // Czyszczenie interwału po odmontowaniu komponentu\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    const fetchUserData = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/userData', {\r\n                method: 'GET',\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (!response.ok) throw new Error(result.error || 'Nie udało się pobrać danych użytkownika');\r\n\r\n            setUserExp(result.exp);\r\n            setUserGold(result.money);\r\n        } catch (error) {\r\n            console.error('Błąd podczas pobierania danych użytkownika:', error.message);\r\n        }\r\n    };\r\n\r\n    const fetchGuilds = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/userGuilds', {\r\n                method: 'GET',\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n            });\r\n            const result = await response.json();\r\n            if (!response.ok) throw new Error(result.error || 'Nie udało się pobrać gildii');\r\n            console.log('Odpowiedz z backendu:', result.guilds); \r\n            setGuilds(result.guilds || []);\r\n        } catch (error) {\r\n            console.error('Błąd podczas pobierania gildii:', error.message);\r\n        }\r\n    };\r\n\r\n    const fetchOnlineUsers = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/onlineUsers\", {\r\n                method: \"GET\",\r\n                headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}`, 'Content-Type': 'application/json' }\r\n            });\r\n            const result = await response.json();\r\n    \r\n            console.log(\"Odpowiedź z backendu o online użytkownikach:\", result.onlineUsers);\r\n            setOnlineUsers(result.onlineUsers || []);\r\n        } catch (error) {\r\n            console.error(\"Błąd podczas pobierania użytkowników online:\", error.message);\r\n        }\r\n    };\r\n\r\n    const createGuild = async () => {\r\n        try {\r\n            if (!newGuildName || !newGuildGoal || !newGuildMaxMembers) {\r\n                alert('Wszystkie pola są wymagane!');\r\n                return;\r\n            }\r\n            const minBonus = userExp < 50 ? 1 : 10;\r\n            const maxBonus = userExp < 50 ? 10 : 20;\r\n\r\n            if (newGuildExpBonus < minBonus || newGuildExpBonus > maxBonus ||\r\n                newGuildGoldBonus < minBonus || newGuildGoldBonus > maxBonus) {\r\n                alert(`❌ Nieprawidłowe wartości bonusów. Dla Twojego poziomu EXP dozwolone są wartości między ${minBonus}% a ${maxBonus}%.`);\r\n                return;\r\n            }\r\n\r\n            if (userGold < 50) {\r\n                alert('⚠ Nie masz wystarczająco złota, aby stworzyć gildię, kwota - 20.');\r\n                return;\r\n            }\r\n            const token = localStorage.getItem('token');\r\n            const guildData = {\r\n                name: newGuildName,\r\n                goal: newGuildGoal,\r\n                maxMembers: Number(newGuildMaxMembers),\r\n                bonus_exp: newGuildExpBonus,\r\n                bonus_gold: newGuildGoldBonus\r\n            };\r\n            console.log(\"🚀 Wysyłane dane do backendu:\", guildData); // DEBUG\r\n            const response = await fetch('http://localhost:8080/api/createGuild', {\r\n                method: 'POST',\r\n                headers: { Authorization: `Bearer ${token}`,'Content-Type': 'application/json' },\r\n                body: JSON.stringify(guildData),\r\n            });\r\n\r\n            const result = await response.json();\r\n            \r\n\r\n            if (!response.ok) {\r\n                if (result.error.includes('Najpierw opuść swoją obecną gildię')) {\r\n                    alert('⚠ Najpierw opuść swoją obecną gildię lub ją usuń, aby stworzyć nową.');\r\n                } else {\r\n                    alert(`❌ Nie udało się utworzyć gildii: ${result.error}`);\r\n                }\r\n                throw new Error(result.error || 'Nie udało się utworzyć gildii');\r\n            }\r\n            alert('Gildia została pomyślnie stworzona!');\r\n            setNewGuildName('');\r\n            setNewGuildGoal('');\r\n            setNewGuildMaxMembers(10);\r\n            setNewGuildExpBonus(minBonus);\r\n            setNewGuildGoldBonus(minBonus);\r\n            await fetchGuilds();\r\n            await fetchUserData();\r\n        } catch (error) {\r\n            console.error('Błąd podczas tworzenia gildii:', error.message);\r\n            alert('Nie udało się utworzyć gildii');\r\n        }\r\n    };\r\n    const handleTezaSubmit = async () => {\r\n        if (!userTezaInput.trim()) return; // Nie pozwalamy zapisać pustej tezy\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/setTeza', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify({ teza: userTezaInput })\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(\"Nie udało się zapisać tezy.\");\r\n            }\r\n    \r\n            alert(\"Teza została zapisana i wygaśnie za 30 minut!\");\r\n            setUserTezaInput(\"\"); // Reset inputa po zapisaniu\r\n        } catch (error) {\r\n            console.error(\"Błąd podczas zapisywania tezy:\", error);\r\n        }\r\n    };\r\n\r\n    const leaveGuild = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/leaveGuild', {\r\n                method: 'POST',\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}`, 'Content-Type': 'application/json'  },\r\n            });\r\n    \r\n            const result = await response.json();\r\n            if (!response.ok) throw new Error(result.error || 'Nie udało się opuścić gildii');\r\n    \r\n            alert('Opuściłeś gildię');\r\n            await fetchGuilds();\r\n        } catch (error) {\r\n            console.error('Błąd podczas opuszczania gildii:', error.message);\r\n            alert('Nie udało się opuścić gildii');\r\n        }\r\n    };\r\n\r\n    const deleteGuild = async (guildId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/deleteGuild/${guildId}`, {\r\n                method: 'DELETE',\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (!response.ok) throw new Error(result.error || 'Nie udało się usunąć gildii');\r\n\r\n            alert('Gildia została usunięta');\r\n            await fetchGuilds();\r\n        } catch (error) {\r\n            console.error('Błąd podczas usuwania gildii:', error.message);\r\n            alert('Nie udało się usunąć gildii');\r\n        }\r\n    };\r\n\r\n    const userGuilds = guilds.filter((guild) =>\r\n        guild.members.some((memberId) => memberId.toString() === userId)\r\n    );\r\n\r\n    if (selectedGuild) {\r\n        return <GuildDetails guild={selectedGuild} goBack={() => setSelectedGuild(null)} />;\r\n    }\r\n    return (\r\n        <div className=\"w-full h-screen justify-center bg-black flex flex-col p-5 justify-center\">\r\n            \r\n            {/* Kontener główny - 3x3 układ */}\r\n            <div className=\"w-full h-full grid grid-cols-3 grid-rows-2 gap-4\">\r\n                    \r\n                {/* Twoja Gildia - (1 rząd, 2 kolumny szerokości) */}\r\n                <div className=\"row-span-1  h-[23vh] col-span-2 bg-gradient-to-r from-black to-maincolor1 rounded-[30px] p-4 border-2\">\r\n                    <h2 className=\"text-white text-2xl font-bold\">Twoja gildia</h2>\r\n                    <ul className=\"space-y-4 mt-4\">\r\n                        {userGuilds.length > 0 ? userGuilds.map((guild) => (\r\n                            <li key={guild._id} className=\"p-4 bg-gray-800 rounded-xl flex justify-between items-center hover:bg-maincolor1 cursor-pointer border-2 border-white\"\r\n                                onClick={() => setSelectedGuild(guild)}>\r\n                                <div className=\"w-full flex justify-between items-center\">\r\n                                    <span className=\"text-white  text-lg font-bold\">{guild.name}</span>\r\n                                    <div className=\"flex items-center text-sm text-gray-300 space-x-6\">\r\n                                        <span>🎖 Bonus EXP: <span className=\"text-green-400\">{guild.bonus_exp}%</span></span>\r\n                                        <span className=\"flex items-center\">\r\n                                            💰 Bonus złota: <span className=\"text-yellow-400 ml-1\">{guild.bonus_gold}%</span>\r\n                                            <span className=\"w-5 h-5 ml-2\" />\r\n                                        </span>\r\n                                        <span>👥 {guild.members.length}/{guild.maxMembers}</span>\r\n                                    </div>\r\n    \r\n                                    {/* Przycisk akcji */}\r\n                                    {guild.ownerId === userId ? (\r\n                                        <button onClick={(e) => { e.stopPropagation(); deleteGuild(guild._id); }} \r\n                                            className=\"bg-maincolor2 text-white px-3 py-1 rounded\">\r\n                                            Usuń\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button onClick={(e) => { e.stopPropagation(); leaveGuild(); }} \r\n                                            className=\"bg-maincolor2 text-white px-3 py-1 rounded\">\r\n                                            Opuść\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            </li>\r\n                        )) : <li className=\"text-gray-400\">Nie jesteś członkiem żadnej gildii</li>}\r\n                    </ul>\r\n                </div>\r\n    {/* Użytkownicy Online - (2 rząd, 1 kolumna szerokości, zajmuje cały rząd) */}\r\n    \r\n    <div className=\"row-span-2 col-span-1 w-[49vh]  w-skreen  h-[95vh] bg-maincolor1 rounded-[30px]  w-skreen p-4 border-2 flex flex-col\">\r\n                    <h2 className=\"text-white text-xl font-bold\">Użytkownicy online</h2>\r\n                    <div className=\"mb-4 p-3 bg-gray-800 rounded-lg\">\r\n                        <h3 className=\"text-white text-lg font-semibold mb-2\">Dodaj swoją tezę</h3>\r\n                        <input type=\"text\" placeholder=\"Wpisz swoją myśl...\" value={userTezaInput}\r\n                            onChange={(e) => setUserTezaInput(e.target.value)}\r\n                            className=\"w-full p-2 rounded bg-gray-700 text-white\" />\r\n                        <button onClick={handleTezaSubmit} className=\"w-full mt-2 p-2 bg-gradient-to-r from-maincolor2 to-maincolor1 rounded text-white font-bold hover:bg-green-700\">\r\n                            Zapisz tezę \r\n                        </button>\r\n                    </div>\r\n    \r\n                    {/* Lista użytkowników */}\r\n                    <ul className=\"space-y-2 overflow-auto max-h-[50vh]\">\r\n                        {onlineUsers.length > 0 ? onlineUsers.map((user, index) => {\r\n                            const funnyEmojis = ['⚔️', '🛡️', '🏹', '🧙‍♂️', '🐉', '🕵️‍♂️', '💀', '👹', '👾', '⚡', '🔥', '🌪️', '☠️', '🛠️', '🏰', '🎭', '💎', '🃏', '🔮', '🧛‍♂️', '🦸‍♂️', '🐺'];\r\n                            const emoji = funnyEmojis[index % funnyEmojis.length];\r\n    \r\n                            return (\r\n                                <li key={user._id} className=\"p-3 bg-gray-800 text-white rounded flex items-center space-x-3\">\r\n                                    <span className=\"text-xl\">{emoji}</span>\r\n                                    <div className=\"flex flex-col\">\r\n                                        <span className=\"font-bold text-lg\">{user.username}</span>\r\n                                        {user.teza && user.teza.trim() !== \"\" && (\r\n                                            <span className=\"text-gray-400 text-sm italic\">„{user.teza}”</span>\r\n                                        )}\r\n                                        <span className=\"text-yellow-300 text-sm\">EXP: {user.exp}</span>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        }) : <li className=\"text-gray-400\">🚫 Brak użytkowników online... gdzie oni wszyscy poszli? 🧐</li>}\r\n                    </ul>\r\n                </div>\r\n                {/* Stwórz Gildię - (2 rząd, 1 kolumna szerokości) */}\r\n                <div className=\"row-span-2 h-[70vh] col-span-1 w-skreen mt-[-22vh] bg-maincolor1 rounded-[30px] p-4 border-2 flex flex-col\">\r\n                <h2 className=\"text-white text-xl font-bold\">Stwórz gildię</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nazwa gildii\"\r\n                        className=\"block w-full p-2 bg-gray-700 rounded mt-2\"\r\n                        value={newGuildName}\r\n                        onChange={(e) => setNewGuildName(e.target.value)}\r\n                    />\r\n                    <textarea\r\n                        placeholder=\"Opis gildii\"\r\n                        className=\"block w-full p-2 bg-gray-700 rounded mt-2\"\r\n                        value={newGuildGoal}\r\n                        onChange={(e) => setNewGuildGoal(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Maksymalna liczba członków\"\r\n                        className=\"block text-white w-full p-2 bg-gray-700 rounded mt-2\"\r\n                        value={newGuildMaxMembers}\r\n                        onChange={(e) => setNewGuildMaxMembers(Number(e.target.value))}\r\n                    />\r\n                    <label className=\"text-white block mt-2\">Bonus EXP:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min={userExp < 50 ? 1 : 10}\r\n                        max={userExp < 50 ? 10 : 20}\r\n                        className=\"text-white block w-full p-2 bg-gray-700 rounded\"\r\n                        value={newGuildExpBonus}\r\n                        onChange={(e) => setNewGuildExpBonus(Number(e.target.value))}\r\n                    />\r\n                    <label className=\"text-white block mt-2\">Bonus złota:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min={userExp < 50 ? 1 : 10}\r\n                        max={userExp < 50 ? 10 : 20}\r\n                        className=\" text-white block w-full p-2 bg-gray-700 rounded\"\r\n                        value={newGuildGoldBonus}\r\n                        onChange={(e) => setNewGuildGoldBonus(Number(e.target.value))}\r\n                    />\r\n                    <button onClick={createGuild} className=\"w-full bg-gradient-to-r from-maincolor2 to-maincolor5 p-2 mt-3 rounded\">\r\n                        Stwórz Gildię\r\n                    </button>\r\n                </div>\r\n                \r\n                {/* Zaproszenia - (2 rząd, 1 kolumna szerokości) */}\r\n                <div className=\"row-span-1 h-[70vh] col-span-1 w-skreen mt-[-22vh] bg-gray-900 rounded-[30px] p-4 border-2 flex flex-col\">\r\n               \r\n                    \r\n                    <GuildInvitations fetchGuilds={fetchGuilds} />\r\n                </div>\r\n    \r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    \r\n}\r\n\r\nexport default GuildView;","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildDetails.js",["231"],[],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction GuildDetails({ guild, goBack }) {\r\n    const [inviteLink] = useState('');\r\n    const [newMaxMembers, setNewMaxMembers] = useState(guild.maxMembers);\r\n    const [inviteUsername, setInviteUsername] = useState('');\r\n    const [inviteStatus, setInviteStatus] = useState('');\r\n    const userId = localStorage.getItem('userId'); \r\n    const isOwner = guild.ownerId === userId;\r\n    const [guildMembersUsernames, setGuildMembersUsernames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchGuildMembersUsernames(guild._id);\r\n    }, [guild._id]);\r\n\r\n    const fetchGuildMembersUsernames = async (guildId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/guilds/${guildId}/members`, {\r\n                method: 'GET',\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n            });\r\n            const result = await response.json();\r\n            if (!response.ok) throw new Error(result.error || 'Nie udało się pobrać nazw użytkowników członków gildii');\r\n            setGuildMembersUsernames(result.members || []);\r\n        } catch (error) {\r\n            console.error('Błąd podczas pobierania nazw użytkowników członków gildii:', error.message);\r\n        }\r\n    };\r\n\r\n    const updateMaxMembers = async () => {\r\n\r\n        if (!isOwner) {\r\n            alert('Tylko właściciel gildii może zmieniać limit użytkowników');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/updateMaxMembers/${guild._id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n                body: JSON.stringify({ maxMembers: newMaxMembers }),\r\n            });\r\n            const result = await response.json();\r\n            if (!response.ok) throw new Error(result.error || 'Nie udało się zaktualizować limitu');\r\n            alert('Limit użytkowników został zaktualizowany');\r\n        } catch (error) {\r\n            console.error('Błąd:', error.message);\r\n        }\r\n    };\r\n\r\n    const removeMember = async (memberId) => {\r\n        if (!isOwner) {\r\n            alert('Tylko właściciel gildii może usuwać członków');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/removeMember/${guild._id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n                body: JSON.stringify({ memberId }),\r\n            });\r\n            const result = await response.json();\r\n            if (!response.ok) throw new Error(result.error || 'Nie udało się usunąć członka');\r\n            alert('Członek został usunięty');\r\n            fetchGuildMembersUsernames(guild._id); \r\n        } catch (error) {\r\n            console.error('Błąd:', error.message);\r\n        }\r\n    };\r\n\r\n    const sendInvite = async () => {\r\n        if (!isOwner) {\r\n            alert('Tylko właściciel gildii może wysyłać zaproszenia');\r\n            return;\r\n        }\r\n        try {\r\n            if (!inviteUsername) {\r\n                alert('Wpisz nazwę użytkownika');\r\n                return;\r\n            }\r\n            const response = await fetch('http://localhost:8080/api/inviteToGuild', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n                body: JSON.stringify({ username: inviteUsername }),\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (!response.ok) throw new Error(result.error || 'Błąd podczas wysyłania zaproszenia');\r\n\r\n            setInviteStatus(`Zaproszenie wysłane do użytkownika ${inviteUsername}`);\r\n            setInviteUsername('');\r\n        } catch (error) {\r\n            console.error('Błąd podczas wysyłania zaproszenia:', error.message);\r\n            setInviteStatus(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"absolute w-full  bg-black1 mt-[-1vh] text-maincolor4 flex justify-center items-center\">\r\n            <div className=\"w-[85vw] h-[80vh] bg-gradient-to-r from-black to-maincolor1 flex flex-col p-4 rounded-3xl shadow-lg  border-gray-700\">\r\n                \r\n                {/* Powrót */}\r\n                <button\r\n                    onClick={goBack}\r\n                    className=\"bg-gray-800 text-white px-5 py-2 rounded-lg mb-4 hover:bg-maincolor2 transition-all font-bold border-2 border-white\"\r\n                >\r\n                    ⬅ Powrót\r\n                </button>\r\n    \r\n                {/* Informacje o gildii */}\r\n                <div className=\"bg-gray-900 p-4 rounded-xl border-2 border-gray-600 shadow-md\">\r\n                    <h2 className=\"text-white text-3xl font-extrabold\">{guild.name}</h2>\r\n                    <p className=\"text-maincolor4 text-md mt-1\">🎯 Opis gildii: <span className=\"text-white\">{guild.goal}</span></p>\r\n                </div>\r\n    \r\n                {/* Lista członków */}\r\n                <div className=\"mt-4\">\r\n                    <h3 className=\"text-maincolor4 text-xl font-semibold mb-3\">👥 Członkowie:</h3>\r\n                    <ul className=\"grid grid-cols-2 md:grid-cols-1 gap-2 max-h-[40vh] overflow-auto\">\r\n                        {guildMembersUsernames.map((member) => (\r\n                            <li key={member._id} className=\"p-3 bg-gray-800 rounded-xl flex justify-between items-center hover:bg-black transition-all border-2 border-white shadow-md\">\r\n                                <span className=\"text-white text-md font-semibold\">\r\n                                    {member.username} {member.isOwner && \"👑 (Lider)\"}\r\n                                </span>\r\n                                {!member.isOwner && isOwner && (\r\n                                    <button\r\n                                        className=\"bg-maincolor2 text-white px-3 py-1 rounded-lg hover:bg-red-500 transition-all\"\r\n                                        onClick={() => removeMember(member._id)}\r\n                                    >\r\n                                        ❌ Usuń\r\n                                    </button>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n    \r\n                <div className=\"border-t-2 border-gray-600 my-3\"></div>\r\n    \r\n                {/* Panel właściciela */}\r\n                {isOwner && (\r\n                    <div className=\"grid grid-cols-2 gap-4 md:grid-cols-1\">\r\n                        \r\n                        {/* Zmiana limitu użytkowników */}\r\n                        <div className=\"mt-2\">\r\n                            <h3 className=\"text-maincolor4 text-lg font-semibold mb-1\">⚙️ Limit użytkowników</h3>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"block w-full p-2 bg-gray-700 text-white rounded-lg border-2 border-gray-500 focus:ring-2 focus:ring-blue-500\"\r\n                                value={newMaxMembers}\r\n                                onChange={(e) => setNewMaxMembers(Number(e.target.value))}\r\n                            />\r\n                            <button\r\n                                onClick={updateMaxMembers}\r\n                                className=\"w-full mt-2 bg-gradient-to-r from-blue-900 to-maincolor2 text-black font-bold py-2 px-4 rounded-lg hover:text-maincolor4 transition-all\"\r\n                            >\r\n                                ✅ Zaktualizuj\r\n                            </button>\r\n                        </div>\r\n    \r\n                        {/* Wysyłanie zaproszeń */}\r\n                        <div className=\"mt-2\">\r\n                            <h3 className=\"text-maincolor4 text-lg font-semibold mb-1\">📩 Wyślij zaproszenie</h3>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwa użytkownika\"\r\n                                className=\"block w-full p-2 bg-gray-700 text-white rounded-lg border-2 border-gray-500 focus:ring-2 focus:ring-blue-500\"\r\n                                value={inviteUsername}\r\n                                onChange={(e) => setInviteUsername(e.target.value)}\r\n                            />\r\n                            <button\r\n                                onClick={sendInvite}\r\n                                className=\"w-full mt-2 bg-gradient-to-r from-blue-900 to-maincolor2 text-black font-bold py-2 px-4 rounded-lg hover:text-maincolor4 transition-all\"\r\n                            >\r\n                                ✉ Wyślij\r\n                            </button>\r\n                            {inviteStatus && (\r\n                                <p className=\"text-gray-300 mt-1\">{inviteStatus}</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GuildDetails;","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildInvitations.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\i18n.js",["232","233","234","235"],[],{"ruleId":"236","severity":1,"message":"237","line":17,"column":6,"nodeType":"238","endLine":17,"endColumn":8,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":8,"column":10,"nodeType":"242","messageId":"243","endLine":8,"endColumn":25},{"ruleId":"236","severity":1,"message":"244","line":17,"column":6,"nodeType":"238","endLine":17,"endColumn":21,"suggestions":"245"},{"ruleId":"240","severity":1,"message":"246","line":6,"column":11,"nodeType":"242","messageId":"243","endLine":6,"endColumn":12},{"ruleId":"236","severity":1,"message":"244","line":20,"column":6,"nodeType":"238","endLine":20,"endColumn":24,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":68,"column":44,"nodeType":"250","messageId":"251","endLine":68,"endColumn":45,"suggestions":"252","suppressions":"253"},{"ruleId":"248","severity":1,"message":"254","line":68,"column":61,"nodeType":"250","messageId":"251","endLine":68,"endColumn":62,"suggestions":"255","suppressions":"256"},{"ruleId":"240","severity":1,"message":"257","line":1,"column":46,"nodeType":"242","messageId":"243","endLine":1,"endColumn":59},{"ruleId":"240","severity":1,"message":"258","line":137,"column":15,"nodeType":"242","messageId":"243","endLine":137,"endColumn":19},{"ruleId":"236","severity":1,"message":"259","line":179,"column":6,"nodeType":"238","endLine":179,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":414,"column":132,"nodeType":"263","endLine":414,"endColumn":179},{"ruleId":"236","severity":1,"message":"264","line":101,"column":5,"nodeType":"238","endLine":101,"endColumn":7,"suggestions":"265"},{"ruleId":"240","severity":1,"message":"266","line":116,"column":11,"nodeType":"242","messageId":"243","endLine":116,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":204,"column":9,"nodeType":"263","endLine":204,"endColumn":80},{"ruleId":"261","severity":1,"message":"262","line":294,"column":9,"nodeType":"263","endLine":294,"endColumn":80},{"ruleId":"236","severity":1,"message":"267","line":36,"column":8,"nodeType":"238","endLine":36,"endColumn":15,"suggestions":"268"},{"ruleId":"240","severity":1,"message":"269","line":8,"column":10,"nodeType":"242","messageId":"243","endLine":8,"endColumn":25},{"ruleId":"240","severity":1,"message":"270","line":17,"column":9,"nodeType":"242","messageId":"243","endLine":17,"endColumn":29},{"ruleId":"240","severity":1,"message":"270","line":10,"column":9,"nodeType":"242","messageId":"243","endLine":10,"endColumn":29},{"ruleId":"236","severity":1,"message":"271","line":44,"column":8,"nodeType":"238","endLine":44,"endColumn":10,"suggestions":"272"},{"ruleId":"261","severity":1,"message":"262","line":84,"column":9,"nodeType":"263","endLine":84,"endColumn":107},{"ruleId":"236","severity":1,"message":"273","line":25,"column":8,"nodeType":"238","endLine":25,"endColumn":19,"suggestions":"274"},{"ruleId":"240","severity":1,"message":"266","line":88,"column":15,"nodeType":"242","messageId":"243","endLine":88,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":361,"column":21,"nodeType":"263","endLine":361,"endColumn":92},{"ruleId":"240","severity":1,"message":"275","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"236","severity":1,"message":"276","line":30,"column":8,"nodeType":"238","endLine":30,"endColumn":79,"suggestions":"277"},{"ruleId":"261","severity":1,"message":"262","line":57,"column":21,"nodeType":"263","endLine":57,"endColumn":110},{"ruleId":"261","severity":1,"message":"262","line":60,"column":21,"nodeType":"263","endLine":60,"endColumn":110},{"ruleId":"261","severity":1,"message":"262","line":95,"column":126,"nodeType":"263","endLine":95,"endColumn":181},{"ruleId":"261","severity":1,"message":"262","line":96,"column":126,"nodeType":"263","endLine":96,"endColumn":186},{"ruleId":"261","severity":1,"message":"262","line":100,"column":126,"nodeType":"263","endLine":100,"endColumn":181},{"ruleId":"261","severity":1,"message":"262","line":101,"column":126,"nodeType":"263","endLine":101,"endColumn":186},{"ruleId":"240","severity":1,"message":"278","line":8,"column":10,"nodeType":"242","messageId":"243","endLine":8,"endColumn":23},{"ruleId":"240","severity":1,"message":"279","line":8,"column":25,"nodeType":"242","messageId":"243","endLine":8,"endColumn":41},{"ruleId":"240","severity":1,"message":"280","line":17,"column":10,"nodeType":"242","messageId":"243","endLine":17,"endColumn":19},{"ruleId":"240","severity":1,"message":"281","line":17,"column":21,"nodeType":"242","messageId":"243","endLine":17,"endColumn":33},{"ruleId":"236","severity":1,"message":"282","line":48,"column":5,"nodeType":"238","endLine":48,"endColumn":7,"suggestions":"283"},{"ruleId":"240","severity":1,"message":"258","line":177,"column":15,"nodeType":"242","messageId":"243","endLine":177,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":246,"column":17,"nodeType":"263","endLine":246,"endColumn":154},{"ruleId":"261","severity":1,"message":"262","line":247,"column":20,"nodeType":"263","endLine":247,"endColumn":163},{"ruleId":"261","severity":1,"message":"262","line":263,"column":62,"nodeType":"263","endLine":263,"endColumn":110},{"ruleId":"261","severity":1,"message":"262","line":264,"column":61,"nodeType":"263","endLine":264,"endColumn":114},{"ruleId":"236","severity":1,"message":"284","line":36,"column":8,"nodeType":"238","endLine":36,"endColumn":10,"suggestions":"285"},{"ruleId":"240","severity":1,"message":"286","line":4,"column":12,"nodeType":"242","messageId":"243","endLine":4,"endColumn":22},{"ruleId":"287","severity":1,"message":"288","line":60,"column":13,"nodeType":"289","messageId":"290","endLine":60,"endColumn":30},{"ruleId":"287","severity":1,"message":"288","line":152,"column":13,"nodeType":"289","messageId":"290","endLine":152,"endColumn":30},{"ruleId":"287","severity":1,"message":"288","line":244,"column":13,"nodeType":"289","messageId":"290","endLine":244,"endColumn":30},{"ruleId":"287","severity":1,"message":"288","line":335,"column":13,"nodeType":"289","messageId":"290","endLine":335,"endColumn":30},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 't'. Either include it or remove the dependency array.","ArrayExpression",["291"],"no-unused-vars","'currentLanguage' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'i18n'. Either include it or remove the dependency array.",["292"],"'t' is assigned a value but never used.",["293"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["294","295"],["296"],"Unnecessary escape character: \\/.",["297","298"],["299"],"'useTransition' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.",["300"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'ShopData'. Either include it or remove the dependency array.",["301"],"'rect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["302"],"'responseMessage' is assigned a value but never used.","'handleLanguageChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'newCreatureData.species' and 'photoName'. Either include them or remove the dependency array.",["303"],"React Hook useEffect has missing dependencies: 'fetchMarketItems', 'fetchUserItems', and 'updateTimers'. Either include them or remove the dependency array.",["304"],"'create' is defined but never used.","React Hook useEffect has missing dependencies: 'changeCreature1Life', 'changeCreature2Life', 'creatureFightData.fight.fightData.creature1.dmg', 'creatureFightData.fight.fightData.creature2.dmg', 'fullFightLenght', and 'infoSpeed'. Either include them or remove the dependency array.",["305"],"'timeLeftTable' is assigned a value but never used.","'setTimeLeftTable' is assigned a value but never used.","'fightData' is assigned a value but never used.","'setFightData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'creaturesData', 'fetchData', and 'spiecesPhotos'. Either include them or remove the dependency array.",["306"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["307"],"'inviteLink' is assigned a value but never used.","no-dupe-keys","Duplicate key 'privateMessages'.","ObjectExpression","unexpected",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"messageId":"314","fix":"315","desc":"316"},{"messageId":"317","fix":"318","desc":"319"},{"kind":"320","justification":"321"},{"messageId":"314","fix":"322","desc":"316"},{"messageId":"317","fix":"323","desc":"319"},{"kind":"320","justification":"321"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},"Update the dependencies array to be: [t]",{"range":"340","text":"341"},"Update the dependencies array to be: [i18n, i18n.language]",{"range":"342","text":"343"},"Update the dependencies array to be: [i18n, selectedLanguage]",{"range":"344","text":"345"},"removeEscape",{"range":"346","text":"321"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"347","text":"348"},"Replace the `\\` with `\\\\` to include the actual backslash character.","directive","",{"range":"349","text":"321"},{"range":"350","text":"348"},"Update the dependencies array to be: [fetchUserData]",{"range":"351","text":"352"},"Update the dependencies array to be: [ShopData]",{"range":"353","text":"354"},"Update the dependencies array to be: [fetchMessages, token]",{"range":"355","text":"356"},"Update the dependencies array to be: [newCreatureData.species, photoName]",{"range":"357","text":"358"},"Update the dependencies array to be: [activeTab, fetchMarketItems, fetchUserItems, updateTimers]",{"range":"359","text":"360"},"Update the dependencies array to be: [visibleItems, creatureFightData.fight.fightData.creature1.info.length, fullFightLenght, infoSpeed, changeCreature2Life, creatureFightData.fight.fightData.creature1.dmg, creatureFightData.fight.fightData.creature2.dmg, changeCreature1Life]",{"range":"361","text":"362"},"Update the dependencies array to be: [creaturesData, fetchData, spiecesPhotos]",{"range":"363","text":"364"},"Update the dependencies array to be: [userId]",{"range":"365","text":"366"},[698,700],"[t]",[800,815],"[i18n, i18n.language]",[895,913],"[i18n, selectedLanguage]",[2088,2089],[2088,2088],"\\",[2105,2106],[2105,2105],[5655,5657],"[fetchUserData]",[2969,2971],"[ShopData]",[1574,1581],"[fetchMessages, token]",[1876,1878],"[newCreatureData.species, photoName]",[1224,1235],"[activeTab, fetchMarketItems, fetchUserItems, updateTimers]",[1349,1420],"[visibleItems, creatureFightData.fight.fightData.creature1.info.length, fullFightLenght, infoSpeed, changeCreature2Life, creatureFightData.fight.fightData.creature1.dmg, creatureFightData.fight.fightData.creature2.dmg, changeCreature1Life]",[1491,1493],"[creaturesData, fetchData, spiecesPhotos]",[1655,1657],"[userId]"]