[{"C:\\Users\\48664\\Desktop\\project\\client\\src\\index.js":"1","C:\\Users\\48664\\Desktop\\project\\client\\src\\App.js":"2","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Password.js":"3","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Username.js":"4","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Register.js":"5","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Profile.js":"6","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Reset.js":"7","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Recovery.js":"8","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\PageNotFound.js":"9","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\MainPage.js":"10","C:\\Users\\48664\\Desktop\\project\\client\\src\\middleware\\auth.js":"11","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\StartPage.js":"12","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Menu.js":"13","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Options.js":"14","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Content.js":"15","C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\helper.js":"16","C:\\Users\\48664\\Desktop\\project\\client\\src\\store\\store.js":"17","C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\validate.js":"18","C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\convert.js":"19","C:\\Users\\48664\\Desktop\\project\\client\\src\\hooks\\fetch.hook.js":"20","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Chat.js":"21","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Notice.js":"22","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\TestButton2.js":"23","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\TestButton3.js":"24","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\PrivateMessages.js":"25","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\FirstOrb.js":"26","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\NewCreatureWindow.js":"27","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\MarketPage.js":"28","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\RequireAuth.js":"29","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\FightScreen.js":"30","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\RedirectIfLoggedIn.js":"31","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Misions.js":"32","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildView.js":"33","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildDetails.js":"34","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildInvitations.js":"35"},{"size":230,"mtime":1733455277000,"results":"36","hashOfConfig":"37"},{"size":3220,"mtime":1737315303854,"results":"38","hashOfConfig":"37"},{"size":5031,"mtime":1737315303862,"results":"39","hashOfConfig":"37"},{"size":2967,"mtime":1737315303866,"results":"40","hashOfConfig":"37"},{"size":3825,"mtime":1737315303864,"results":"41","hashOfConfig":"37"},{"size":6221,"mtime":1733462294000,"results":"42","hashOfConfig":"37"},{"size":4539,"mtime":1737315303866,"results":"43","hashOfConfig":"37"},{"size":4507,"mtime":1737315303863,"results":"44","hashOfConfig":"37"},{"size":113,"mtime":1731339676000,"results":"45","hashOfConfig":"37"},{"size":4792,"mtime":1737315303861,"results":"46","hashOfConfig":"37"},{"size":1623,"mtime":1737315303867,"results":"47","hashOfConfig":"37"},{"size":4890,"mtime":1736614352539,"results":"48","hashOfConfig":"37"},{"size":3709,"mtime":1737315481318,"results":"49","hashOfConfig":"37"},{"size":2028,"mtime":1733461430000,"results":"50","hashOfConfig":"37"},{"size":2181,"mtime":1737315423472,"results":"51","hashOfConfig":"37"},{"size":5662,"mtime":1733464357000,"results":"52","hashOfConfig":"37"},{"size":721,"mtime":1733462113000,"results":"53","hashOfConfig":"37"},{"size":4047,"mtime":1733462017000,"results":"54","hashOfConfig":"37"},{"size":711,"mtime":1733461908000,"results":"55","hashOfConfig":"37"},{"size":2671,"mtime":1733462052000,"results":"56","hashOfConfig":"37"},{"size":3225,"mtime":1736614352537,"results":"57","hashOfConfig":"37"},{"size":650,"mtime":1736542038798,"results":"58","hashOfConfig":"37"},{"size":21999,"mtime":1737315303859,"results":"59","hashOfConfig":"37"},{"size":12811,"mtime":1737315303860,"results":"60","hashOfConfig":"37"},{"size":17053,"mtime":1736688008572,"results":"61","hashOfConfig":"37"},{"size":3287,"mtime":1736610062972,"results":"62","hashOfConfig":"37"},{"size":4140,"mtime":1736450057831,"results":"63","hashOfConfig":"37"},{"size":18820,"mtime":1737314372472,"results":"64","hashOfConfig":"37"},{"size":365,"mtime":1737315303865,"results":"65","hashOfConfig":"37"},{"size":8834,"mtime":1737315303860,"results":"66","hashOfConfig":"37"},{"size":728,"mtime":1737315303864,"results":"67","hashOfConfig":"37"},{"size":11808,"mtime":1737315303858,"results":"68","hashOfConfig":"37"},{"size":11035,"mtime":1737315303857,"results":"69","hashOfConfig":"37"},{"size":8519,"mtime":1737315303855,"results":"70","hashOfConfig":"37"},{"size":4698,"mtime":1737315303855,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1e4jrjj",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"75"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"75"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\48664\\Desktop\\project\\client\\src\\index.js",[],[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\App.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Password.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Username.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Register.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Profile.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Reset.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Recovery.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\PageNotFound.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\MainPage.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\middleware\\auth.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\StartPage.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Menu.js",["182"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Options.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\Content.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\helper.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\store\\store.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\validate.js",[],["183","184"],"C:\\Users\\48664\\Desktop\\project\\client\\src\\helper\\convert.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\hooks\\fetch.hook.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Chat.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Notice.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\TestButton2.js",["185","186","187"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\TestButton3.js",["188","189","190","191"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\PrivateMessages.js",["192"],[],"import React, { useState, useEffect } from 'react';\r\nfunction PrivateMessages({data}) {\r\n    const [messages, setMessages] = useState([]); //Przechowywanie wiadomości użytkownika\r\n    const [newMessage, setNewMessage] = useState({receiver: '', title: '', content: ''});//Nowa wiadomość\r\n    const [newMessageToAll, setNewMessageToAll] = useState({title: '', content: ''});\r\n    const [selectedMessage, setSelectedMessage] = useState(null); //wybrana wiadomość\r\n    const [showSendModal, setShowSendModal] = useState(false);\r\n    const [showSendToAllModal, setShowSendToAllModal] = useState(false);\r\n    const [showReplyModal, setShowReplyModal] = useState(false);\r\n    const token = localStorage.getItem('token');\r\n    const currentUser = data.username;\r\n\r\n    const fetchMessages = async () => {\r\n        try{\r\n            const response = await fetch('http://localhost:8080/api/messages', {\r\n                method: 'GET',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            if (response.ok){\r\n                const data = await response.json();\r\n                console.log('Pobrane wiadomości: ')\r\n                setMessages(data);//Ustawienie wiadomości\r\n            }else{\r\n                console.error('Błąd podczas pobierania wiadomości');\r\n            }\r\n        } catch(error){\r\n            console.error('Błąd serwera:',error);\r\n        }\r\n    };\r\n    //Pobieranie wiadomości po załadowaniu komponentu\r\n    useEffect(() => {\r\n        fetchMessages();\r\n    }, [token]);\r\n    //Wysyłanie wiadomości do wszystkich\r\n    const sendMessageToAll = async() => {\r\n        if(!newMessageToAll.title || !newMessageToAll.content){\r\n            alert('Tytuł i treść są wymagane!');\r\n            return;\r\n        }\r\n        try{\r\n            const response = await fetch('http://localhost:8080/api/messageToAll', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(newMessageToAll),\r\n            });\r\n            if(response.ok){\r\n                //alert('Wiadomość do wszystkich została wysłana!');\r\n                setNewMessageToAll({title:'', content:''});\r\n                setShowSendToAllModal(false);\r\n            }else{\r\n                const errorData = await response.json();\r\n                alert(`Błąd: ${errorData.error || 'Nie udało się wysłać wiadomości do wszystkich użytkowników.'}`);\r\n            }\r\n        }catch(error){\r\n            console.error('Błąd serwera: ',error);\r\n        }\r\n    };\r\n    //Wysyłąnie nowej wiadomości\r\n    const sendMessage = async () => {\r\n        if(!newMessage.receiver || !newMessage.title || !newMessage.content){\r\n            alert('Wszystkie pola są wymagane!');\r\n            return;\r\n        }\r\n        if(newMessage.receiver === currentUser) {\r\n            alert('Nie możesz wysłać wiadomości do samego siebie.');\r\n            return;\r\n        }\r\n        try{\r\n            const response = await fetch('http://localhost:8080/api/message', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(newMessage),\r\n            });\r\n            if(response.ok){\r\n                alert('Wiadomość wysłana!');\r\n                setNewMessage({receiver: '', title: '', content: ''}); //reset formularza\r\n                setShowSendModal(false);\r\n                setShowReplyModal(false);\r\n            } else {\r\n                const errorData = await response.json();\r\n                alert(`Błąd: ${errorData.error || 'Nie udało się wysłać wiadomości.'}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Błąd serwera:', error);\r\n        }\r\n    };\r\n    //Usuwanie wiadomości\r\n    const deleteMessage = async (messageId) => {\r\n        try{\r\n            const response = await fetch(`http://localhost:8080/api/messages/${messageId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            if (response.ok) {\r\n                setMessages((prevMessages) => prevMessages.filter((msg) => msg._id !== messageId));\r\n            } else {\r\n                console.error('Błąd podczas usuwania wiadomości');\r\n            }\r\n        } catch (error){\r\n            console.error('Błąd serwera:', error);\r\n        }\r\n    };\r\n    //Oznaczanie wiadomości jako przeczytana\r\n    const markMessageAsReaded = async (messageId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/messages/${messageId}/read`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            if (!response.ok) \r\n            {\r\n                throw new Error('Nie udało się oznaczyć wiadomości jako przeczytanej.');\r\n            }\r\n            console.log(`Wiadomość ${messageId} oznaczona jako przeczytana.`);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    };\r\n\r\n    //Otwieranie modala do odpowiedzi\r\n    const openReplyModal = (senderUsername) => {\r\n        setNewMessage({receiver: senderUsername, title: '', content: ''});\r\n        setShowReplyModal(true);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"w-full h-screen bg-black flex flex-col p-5 justify-center text-maincolor4\">\r\n            {/* Zielony komponent na czarnym tle */}\r\n            <div className=\"w-full h-full bg-maincolor1 p-5 rounded-xl flex flex-col\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                    <h1 className=\"text-2xl font-bold\">Wiadomości prywatne</h1>\r\n                    <button\r\n                    onClick={() => fetchMessages()}\r\n                    className=\"bg-maincolor1 text-maincolor4 border-maincolor2 border px-4 py-2 rounded shadow hover:bg-opacity-80\"\r\n                    >\r\n                        Odśwież\r\n                    </button>\r\n                    <button\r\n                        onClick={() => setShowSendModal(true)}\r\n                        className=\"bg-maincolor1 text-maincolor4 border-maincolor2 border px-4 py-2 rounded shadow hover:bg-opacity-80\"\r\n                    >\r\n                        Wyślij wiadomość\r\n                    </button>\r\n                    {data.isAdmin && (\r\n                        <button\r\n                            onClick={() => setShowSendToAllModal(true)}\r\n                            className=\"bg-maincolor4 text-black border-maincolor2 border px-4 py-2 rounded shadow hover:bg-opacity-80\"\r\n                        >\r\n                            Wiadomość do wszystkich\r\n                        </button>\r\n                    )}\r\n                </div>\r\n    \r\n                {/* Lista wiadomości */}\r\n                <div className=\"p-4 rounded-xl overflow-y-auto space-y-4 flex-grow\">\r\n                {messages.length > 0 ? (\r\n                    messages.map((msg) => (\r\n                        msg.senderId ? (\r\n                            <div\r\n                                key={msg._id}\r\n                                className={`p-4 rounded-lg shadow-md border ${\r\n                                    msg.isRead ? \"border-maincolor2\" : \"border-maincolor5\"\r\n                                }`}\r\n                            >\r\n                                <div className=\"flex justify-between items-center\">\r\n                                    <div>\r\n                                        <p className=\"font-bold\">{msg.title}</p>\r\n                                        <p className=\"text-sm\">Od: {msg.senderId ? msg.senderId.username : \"Nieznany użytkownik\"}</p>\r\n                                        <p className=\"text-xs\">{new Date(msg.createdAt).toLocaleString()}</p>\r\n                                    </div>\r\n                                    <button\r\n                                        onClick={() => deleteMessage(msg._id)}\r\n                                        className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                                    >\r\n                                        Usuń\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"space-x-4 mt-2\">\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            setSelectedMessage(selectedMessage === msg ? null : msg);\r\n                                            if (!msg.isRead) markMessageAsReaded(msg._id);\r\n                                        }}\r\n                                        className=\"mt-2 text-blue-500 hover:underline\"\r\n                                    >\r\n                                        {selectedMessage === msg ? \"Zwiń\" : \"Zobacz szczegóły\"}\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => openReplyModal(msg.senderId.username)}\r\n                                        className=\"text-green-500 hover:underline\"\r\n                                    >\r\n                                        Odpowiedz\r\n                                    </button>\r\n                                </div>\r\n                                {selectedMessage === msg && (\r\n                                    <div className=\"mt-4\">\r\n                                        <p className=\"text-sm\">{msg.content}</p>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ) : null // Dodaj odpowiednie zachowanie, gdy senderId jest null\r\n                    ))\r\n                ) : (\r\n                    <p className=\"text-center\">Brak wiadomości</p>\r\n                )}\r\n                </div>\r\n            </div>\r\n    \r\n            {/*Modal do odpowiedzi */}\r\n            {showReplyModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-75 flex justify-center items-center\">\r\n                    <div className=\"bg-maincolor1 p-6 rounded-lg shadow-md w-1/2\">\r\n                        <h2 className=\"text-lg font-bold mb-4\"> Odpowiedź do {newMessage.receiver}</h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Tytuł\"\r\n                            value={newMessage.title}\r\n                            onChange={(e) => setNewMessage({...newMessage, title: e.target.value})}\r\n                            className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                            />\r\n                            <textarea\r\n                            placeholder=\"Treść\"\r\n                            value={newMessage.content}\r\n                            onChange={(e) => setNewMessage({...newMessage, content: e.target.value})}\r\n                            className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <div className=\"flex justify-end space-x-2\">\r\n                            <button\r\n                                onClick={() => setShowReplyModal(false)}\r\n                                className=\"bg-red-500 text-white px-4 py-2 rounded shadow hover:bg-red-600\"\r\n                            >\r\n                                Anuluj\r\n                            </button>\r\n                            <button\r\n                                onClick={sendMessage}\r\n                                className=\"bg-maincolor4 text-black px-4 py-2 rounded shadow hover:bg-opacity-80\"\r\n                            >\r\n                                Wyślij\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal do wysyłania wiadomości do wszystkich */}\r\n            {showSendToAllModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-75 flex justify-center items-center\">\r\n                    <div className=\"bg-maincolor1 p-6 rounded-lg shadow-md w-1/2\">\r\n                        <h2 className=\"text-lg font-bold mb-4\">Wyślij wiadomość do wszystkich</h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Tytuł\"\r\n                            value={newMessageToAll.title}\r\n                            onChange={(e) => setNewMessageToAll({...newMessageToAll, title: e.target.value})}\r\n                            className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <textarea\r\n                            placeholder=\"Treść\"\r\n                            value={newMessageToAll.content}\r\n                            onChange={(e) => setNewMessageToAll({...newMessageToAll, content: e.target.value})}\r\n                            className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <div className=\"flex justify-end space-x-2\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowSendToAllModal(false);\r\n                                    setNewMessageToAll({title: '', content: ''});\r\n                                }}\r\n                                className=\"bg-red-500 text-white px-4 py-2 rounded shadow hover:bg-red-600\"\r\n                            >\r\n                                Anuluj\r\n                            </button>\r\n                            <button\r\n                                onClick={sendMessageToAll}\r\n                                className=\"bg-maincolor4 text-black px-4 py-2 rounded shadow hover:bg-opacity-80\"\r\n                            >\r\n                                Wyślij\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n    \r\n            {/* Modal do wysyłania wiadomości */}\r\n            {showSendModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-75 flex justify-center items-center\">\r\n                    <div className=\"bg-maincolor1 p-6 rounded-lg shadow-md w-1/2\">\r\n                        <h2 className=\"text-lg font-bold mb-4\">Wyślij wiadomość</h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Odbiorca\"\r\n                            value={newMessage.receiver}\r\n                            onChange={(e) => setNewMessage({...newMessage, receiver: e.target.value})}\r\n                            className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Tytuł\"\r\n                            value={newMessage.title}\r\n                            onChange={(e) => setNewMessage({...newMessage, title: e.target.value})}\r\n                            className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <textarea\r\n                            type=\"text\"\r\n                            placeholder=\"Treść\"\r\n                            value={newMessage.content}\r\n                            onChange={(e) => setNewMessage({...newMessage, content: e.target.value})}\r\n                            className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <div className=\"flex justify-end space-x-2\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowSendModal(false);\r\n                                    setNewMessage({receiver: '', title: '', content: ''});\r\n                                }}\r\n                                className=\"bg-red-500 text-white px-4 py-2 rounded shadow hover:bg-red-600\"\r\n                            >\r\n                                Anuluj\r\n                            </button>\r\n                            <button\r\n                                onClick={sendMessage}\r\n                                className=\"bg-maincolor4 text-black px-4 py-2 rounded shadow hover:bg-opacity-80\"\r\n                            >\r\n                                Wyślij\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default PrivateMessages;","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\FirstOrb.js",["193","194"],[],"import React, { useState } from 'react'; // Import biblioteki React\r\nimport { useTranslation } from 'react-i18next'; // Import hooka `useTranslation` z biblioteki do obsługi tłumaczeń\r\n\r\n// Komponent `Options`, który obsługuje wybór języka i posiada przycisk zamykający okno opcji\r\nfunction FirstOrb({firsOrbActiveButton,  NewCreatureActiveButton}) {\r\n  const { i18n } = useTranslation(); // Inicjalizacja tłumaczeń z `react-i18next`\r\n  const [choice, setChoice] = useState(null);\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n    const elements=[\r\n        \"water\",\r\n        \"fire\",\r\n        \"nature\",\r\n        \"light\",\r\n        \"dark\",\r\n    ]\r\n  // Funkcja obsługująca zmianę języka\r\n  const handleLanguageChange = (e) => {\r\n    i18n.changeLanguage(e.target.value); // Zmiana języka na wybrany w select\r\n  };\r\n  const orbChecked =(element)=>{\r\n    setChoice(element);\r\n  }\r\n  const sendFirstOrb = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        console.warn('Brak tokenu w localStorage');\r\n        return;\r\n    }\r\n    console.log(\"cos\");\r\n    try{\r\n        console.log(\"cos1\");\r\n        const response = await fetch('http://localhost:8080/api/OrbDraw',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({orb: choice}),\r\n        });\r\n        console.log(\"cos2\");\r\n        if (!response.ok) {\r\n            throw new Error(`Błąd ${response.status}: ${response.statusText}`);\r\n          }\r\n        const data = await response.json();\r\n        return data;\r\n    }catch(error){\r\n        console.error('Błąd podczas wysyłania danych:', error);\r\n        setResponseMessage('Wystąpił błąd podczas wysyłania danych.');\r\n    }\r\n    \r\n  };\r\n  const doubleFunctionClick = () =>\r\n  {\r\n    if(choice)\r\n    {\r\n        console.log(\"działa\");\r\n       \r\n        firsOrbActiveButton();\r\n        sendFirstOrb().then((response)=>{\r\n          NewCreatureActiveButton(response.NewCreature);\r\n        })\r\n    }\r\n  }\r\n  // Wygląd i logika komponentu\r\n  return (\r\n    <div className=\"absolute bg-black1 bg-opacity-90 w-full h-screen items-center flex flex-col justify-center\">\r\n      <div className=\"relative bg-maincolor1 w-3/4 h-[25vw] mt-[10vh] text-maincolor4  rounded-3xl border-2 p-4 flex flex-col justify-between text-2xl items-center\">\r\n      <div className=\"flex justify-between w-full h-2/3 items-center bg-black px-8  rounded-3xl bg-opacity-70\">\r\n        {elements.map((element, index) =>\r\n        <button onClick ={()=> orbChecked(element)}className={`w-1/6 h-[11.5vw] rounded-full hover:shadow-custom-main hover:bg-maincolor4 ${choice === element?\r\n            \"shadow-custom-main bg-maincolor4\":\"\"\r\n        }`}>\r\n    \r\n            <img src={`images/${element}orb.png`} alt={element}/>\r\n        </button>\r\n        )}\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <button onClick={doubleFunctionClick} className=\"px-9 py-2 bg-maincolor5 text-black1 rounded-lg hover:bg-maincolor4 transition\">\r\n            OK\r\n          </button>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FirstOrb; // Eksport komponentu","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\NewCreatureWindow.js",["195","196","197"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next'; // Import hooka `useTranslation` z biblioteki do obsługi tłumaczeń\r\n\r\n// Komponent `Options`, który obsługuje wybór języka i posiada przycisk zamykający okno opcji\r\nfunction NewCreatureWindow({ newCreatureData , windowSwicher}) {\r\n  const { i18n } = useTranslation(); // Inicjalizacja tłumaczeń z `react-i18next`\r\n    const [photoName, setPhotoName] = useState(null);\r\n    const [name,setName] = useState();\r\n  // Funkcja obsługująca zmianę języka\r\n  const handleLanguageChange = (e) => {\r\n    i18n.changeLanguage(e.target.value); // Zmiana języka na wybrany w select\r\n  };\r\n  useEffect(() => {\r\n        const fetchSpeciesPhoto = async () => {\r\n            const token = localStorage.getItem('token'); // Pobranie tokena z localStorage\r\n            if (!token) {\r\n                console.warn('Brak tokenu w localStorage');\r\n                return;\r\n            }\r\n    \r\n            try {\r\n                const response = await fetch(`http://localhost:8080/api/speciesPhoto?speciesName=${newCreatureData.species}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`, // Wysłanie tokena w nagłówku\r\n                    },\r\n                });\r\n    \r\n                if (!response.ok) {\r\n                    console.error('Błąd pobierania danych obrazka:', response.statusText);\r\n                    return;\r\n                }\r\n                \r\n                const photo = await response.json();\r\n                setPhotoName(photo.photoName);\r\n                console.log(photoName);\r\n            } catch (error) {\r\n                console.error('Błąd podczas pobierania danych obrazka:', error);\r\n            }\r\n  \r\n        };\r\n    \r\n        fetchSpeciesPhoto(); // Wywołanie funkcji\r\n    }, []);\r\n    const sendNewName = async()=>\r\n    {\r\n        const token = localStorage.getItem('token'); // Pobranie tokena z localStorage\r\n            if (!token) {\r\n                console.warn('Brak tokenu w localStorage');\r\n                return;\r\n            }\r\n            try{\r\n                const response = await fetch('http://localhost:8080/api/setNewName',{\r\n                    method: 'POST',\r\n                    headers:{\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({newName: name,\r\n                    creatureid: newCreatureData._id\r\n                    }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`Błąd ${response.status}: ${response.statusText}`);\r\n                  }\r\n            }catch(error){\r\n                console.error('Błąd podczas wysyłania danych:', error);\r\n            }\r\n\r\n    }\r\n    const okClickActions = () =>\r\n    {\r\n        windowSwicher();\r\n        sendNewName();\r\n    }\r\n  // Wygląd i logika komponentu\r\n  return (\r\n    <div className=\"absolute bg-black1 bg-opacity-90 w-full h-screen items-center flex flex-col\">\r\n      {/* Główne okno opcji */}\r\n      <div className=\"relative bg-maincolor1 w-1/2 h-2/3 mt-[10vh] text-maincolor4 flex flex-col items-center rounded-3xl border-2 text-2xl space-y-4\">\r\n        {newCreatureData.species}\r\n        <div className=\"relative h-[27vw] aspect-square bg-black1 rounded-xl border-maincolor5 border-2\">\r\n        {photoName &&(\r\n        <img src={`images/${photoName}.png` } className=\"absolute w-full h-full object-cover rounded-xl\"/>\r\n        )\r\n        }\r\n        </div>\r\n        Nadaj imie:\r\n        <input type=\"text\" value={name} onChange={(e)=> setName(e.target.value)} className='bg-black text-maincolor4 border border-maincolor5 rounded-xl'/>\r\n        <button onClick={okClickActions} className='bottom-10 border-2 rounded-3xl w-1/6 border-maincolor5 hover:shadow-maincolor5 shadow-buttonshadow transition duration-300 hover:text-maincolor5'>OK</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCreatureWindow; // Eksport komponentu","C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\MarketPage.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\RequireAuth.js",[],[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\FightScreen.js",["198","199","200","201","202","203","204","205"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\RedirectIfLoggedIn.js",[],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\Misions.js",["206","207","208","209","210","211","212","213","214","215"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildView.js",["216"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildDetails.js",["217"],[],"C:\\Users\\48664\\Desktop\\project\\client\\src\\components\\ContentComponents\\GuildInvitations.js",[],[],{"ruleId":"218","severity":1,"message":"219","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"222","severity":1,"message":"223","line":68,"column":44,"nodeType":"224","messageId":"225","endLine":68,"endColumn":45,"suggestions":"226","suppressions":"227"},{"ruleId":"222","severity":1,"message":"228","line":68,"column":61,"nodeType":"224","messageId":"225","endLine":68,"endColumn":62,"suggestions":"229","suppressions":"230"},{"ruleId":"218","severity":1,"message":"231","line":134,"column":15,"nodeType":"220","messageId":"221","endLine":134,"endColumn":19},{"ruleId":"232","severity":1,"message":"233","line":180,"column":6,"nodeType":"234","endLine":180,"endColumn":8,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":424,"column":132,"nodeType":"238","endLine":424,"endColumn":179},{"ruleId":"232","severity":1,"message":"239","line":105,"column":5,"nodeType":"234","endLine":105,"endColumn":7,"suggestions":"240"},{"ruleId":"218","severity":1,"message":"241","line":120,"column":11,"nodeType":"220","messageId":"221","endLine":120,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":208,"column":9,"nodeType":"238","endLine":208,"endColumn":80},{"ruleId":"236","severity":1,"message":"237","line":298,"column":9,"nodeType":"238","endLine":298,"endColumn":80},{"ruleId":"232","severity":1,"message":"242","line":35,"column":8,"nodeType":"234","endLine":35,"endColumn":15,"suggestions":"243"},{"ruleId":"218","severity":1,"message":"244","line":8,"column":10,"nodeType":"220","messageId":"221","endLine":8,"endColumn":25},{"ruleId":"218","severity":1,"message":"245","line":17,"column":9,"nodeType":"220","messageId":"221","endLine":17,"endColumn":29},{"ruleId":"218","severity":1,"message":"245","line":10,"column":9,"nodeType":"220","messageId":"221","endLine":10,"endColumn":29},{"ruleId":"232","severity":1,"message":"246","line":44,"column":8,"nodeType":"234","endLine":44,"endColumn":10,"suggestions":"247"},{"ruleId":"236","severity":1,"message":"237","line":84,"column":9,"nodeType":"238","endLine":84,"endColumn":107},{"ruleId":"218","severity":1,"message":"248","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"249","line":27,"column":8,"nodeType":"234","endLine":27,"endColumn":79,"suggestions":"250"},{"ruleId":"236","severity":1,"message":"237","line":54,"column":21,"nodeType":"238","endLine":54,"endColumn":110},{"ruleId":"236","severity":1,"message":"237","line":57,"column":21,"nodeType":"238","endLine":57,"endColumn":110},{"ruleId":"236","severity":1,"message":"237","line":92,"column":126,"nodeType":"238","endLine":92,"endColumn":181},{"ruleId":"236","severity":1,"message":"237","line":93,"column":126,"nodeType":"238","endLine":93,"endColumn":186},{"ruleId":"236","severity":1,"message":"237","line":97,"column":126,"nodeType":"238","endLine":97,"endColumn":181},{"ruleId":"236","severity":1,"message":"237","line":98,"column":126,"nodeType":"238","endLine":98,"endColumn":186},{"ruleId":"218","severity":1,"message":"251","line":7,"column":10,"nodeType":"220","messageId":"221","endLine":7,"endColumn":23},{"ruleId":"218","severity":1,"message":"252","line":7,"column":25,"nodeType":"220","messageId":"221","endLine":7,"endColumn":41},{"ruleId":"218","severity":1,"message":"253","line":16,"column":10,"nodeType":"220","messageId":"221","endLine":16,"endColumn":19},{"ruleId":"218","severity":1,"message":"254","line":16,"column":21,"nodeType":"220","messageId":"221","endLine":16,"endColumn":33},{"ruleId":"232","severity":1,"message":"255","line":46,"column":5,"nodeType":"234","endLine":46,"endColumn":7,"suggestions":"256"},{"ruleId":"218","severity":1,"message":"231","line":174,"column":15,"nodeType":"220","messageId":"221","endLine":174,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":244,"column":17,"nodeType":"238","endLine":244,"endColumn":154},{"ruleId":"236","severity":1,"message":"237","line":245,"column":20,"nodeType":"238","endLine":245,"endColumn":163},{"ruleId":"236","severity":1,"message":"237","line":261,"column":62,"nodeType":"238","endLine":261,"endColumn":110},{"ruleId":"236","severity":1,"message":"237","line":262,"column":61,"nodeType":"238","endLine":262,"endColumn":114},{"ruleId":"232","severity":1,"message":"257","line":32,"column":8,"nodeType":"234","endLine":32,"endColumn":10,"suggestions":"258"},{"ruleId":"218","severity":1,"message":"259","line":4,"column":12,"nodeType":"220","messageId":"221","endLine":4,"endColumn":22},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["260","261"],["262"],"Unnecessary escape character: \\/.",["263","264"],["265"],"'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'creatures', 'itemsFromUser', and 'species'. Either include them or remove the dependency array.","ArrayExpression",["266"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'ShopData'. Either include it or remove the dependency array.",["267"],"'rect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["268"],"'responseMessage' is assigned a value but never used.","'handleLanguageChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'newCreatureData.species' and 'photoName'. Either include them or remove the dependency array.",["269"],"'create' is defined but never used.","React Hook useEffect has missing dependencies: 'changeCreature1Life', 'changeCreature2Life', 'creatureFightData.fight.fightData.creature1.dmg', 'creatureFightData.fight.fightData.creature2.dmg', 'fullFightLenght', and 'infoSpeed'. Either include them or remove the dependency array.",["270"],"'timeLeftTable' is assigned a value but never used.","'setTimeLeftTable' is assigned a value but never used.","'fightData' is assigned a value but never used.","'setFightData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'creaturesData' and 'spiecesPhotos'. Either include them or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["272"],"'inviteLink' is assigned a value but never used.",{"messageId":"273","fix":"274","desc":"275"},{"messageId":"276","fix":"277","desc":"278"},{"kind":"279","justification":"280"},{"messageId":"273","fix":"281","desc":"275"},{"messageId":"276","fix":"282","desc":"278"},{"kind":"279","justification":"280"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},"removeEscape",{"range":"297","text":"280"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"298","text":"299"},"Replace the `\\` with `\\\\` to include the actual backslash character.","directive","",{"range":"300","text":"280"},{"range":"301","text":"299"},"Update the dependencies array to be: [creatures, itemsFromUser, species]",{"range":"302","text":"303"},"Update the dependencies array to be: [ShopData]",{"range":"304","text":"305"},"Update the dependencies array to be: [fetchMessages, token]",{"range":"306","text":"307"},"Update the dependencies array to be: [newCreatureData.species, photoName]",{"range":"308","text":"309"},"Update the dependencies array to be: [visibleItems, creatureFightData.fight.fightData.creature1.info.length, fullFightLenght, infoSpeed, changeCreature2Life, creatureFightData.fight.fightData.creature1.dmg, creatureFightData.fight.fightData.creature2.dmg, changeCreature1Life]",{"range":"310","text":"311"},"Update the dependencies array to be: [creaturesData, spiecesPhotos]",{"range":"312","text":"313"},"Update the dependencies array to be: [userId]",{"range":"314","text":"315"},[2088,2089],[2088,2088],"\\",[2105,2106],[2105,2105],[5932,5934],"[creatures, itemsFromUser, species]",[3119,3121],"[ShopData]",[1553,1560],"[fetchMessages, token]",[1876,1878],"[newCreatureData.species, photoName]",[1340,1411],"[visibleItems, creatureFightData.fight.fightData.creature1.info.length, fullFightLenght, infoSpeed, changeCreature2Life, creatureFightData.fight.fightData.creature1.dmg, creatureFightData.fight.fightData.creature2.dmg, changeCreature1Life]",[1408,1410],"[creaturesData, spiecesPhotos]",[1340,1342],"[userId]"]