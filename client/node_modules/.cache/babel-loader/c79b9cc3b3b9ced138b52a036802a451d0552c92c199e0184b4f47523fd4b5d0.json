{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48664\\\\source\\\\repos\\\\DawidPodpora\\\\Stworki\\\\client\\\\src\\\\components\\\\ContentComponents\\\\PrivateMessages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateMessages(_ref) {\n  _s();\n  let {\n    username\n  } = _ref;\n  const [messages, setMessages] = useState([]); //Przechowywanie wiadomości użytkownika\n  const [newMessage, setNewMessage] = useState({\n    receiver: '',\n    title: '',\n    content: ''\n  }); //Nowa wiadomość\n  const [selectedMessage, setSelectedMessage] = useState(null); //wybrana wiadomość\n  const token = localStorage.getItem('token');\n  const [showSendModal, setShowSendModal] = useState(false);\n\n  //Pobieranie wiadomości po załadowaniu komponentu\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/messages', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Pobrane wiadomości: ');\n          setMessages(data); //Ustawienie wiadomości\n        } else {\n          console.error('Błąd podczas pobierania wiadomości');\n        }\n      } catch (error) {\n        console.error('Błąd serwera:', error);\n      }\n    };\n    fetchMessages();\n  }, [token]);\n\n  //Wysyłąnie nowej wiadomości\n  const sendMessage = async () => {\n    if (!newMessage.receiver || !newMessage.title || !newMessage.content) {\n      alert('Wszystkie pola są wymagane!');\n      return;\n    }\n\n    //do poprawy\n    if (newMessage.receiver === username) {\n      alert('Nie możesz wysłać wiadomości do samego siebie.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newMessage)\n      });\n      if (response.ok) {\n        alert('Wiadomość wysłana!');\n        setNewMessage({\n          receiver: '',\n          title: '',\n          content: ''\n        }); //reset formularza\n        setShowSendModal(false);\n      } else {\n        const errorData = await response.json();\n        alert(`Błąd: ${errorData.error || 'Nie udało się wysłać wiadomości.'}`);\n      }\n    } catch (error) {\n      console.error('Błąd serwera:', error);\n    }\n  };\n\n  //Usuwanie wiadomości\n  const deleteMessage = async messageId => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/${messageId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setMessages(prevMessages => prevMessages.filter(msg => msg._id !== messageId));\n      } else {\n        console.error('Błąd podczas usuwania wiadomości');\n      }\n    } catch (error) {\n      console.error('Błąd serwera:', error);\n    }\n  };\n\n  //Oznaczanie wiadomości jako przeczytana\n  const markMessageAsReaded = async messageId => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/messages/${messageId}/read`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Nie udało się oznaczyć wiadomości jako przeczytanej.');\n      }\n      console.log(`Wiadomość ${messageId} oznaczona jako przeczytana.`);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen bg-black flex flex-col p-5 justify-center text-maincolor4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full bg-maincolor1 p-5 rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Wiadomo\\u015Bci prywatne\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowSendModal(true),\n          className: \"bg-maincolor1 text-maincolor4 border-maincolor2 border px-4 py-2 rounded shadow hover:bg-opacity-80\",\n          children: \"Wy\\u015Blij wiadomo\\u015B\\u0107\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow-lg overflow-y-auto space-y-4 h-[70vh]\",\n        children: messages.length > 0 ? messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-lg shadow-md border ${msg.isRead ? \"border-maincolor5\" : \"border-maincolor2\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-bold\",\n                children: msg.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: [\"Od: \", msg.senderId.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs\",\n                children: new Date(msg.createdAt).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteMessage(msg._id),\n              className: \"text-red-500 hover:text-red-700 text-sm\",\n              children: \"Usu\\u0144\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSelectedMessage(selectedMessage === msg ? null : msg);\n              if (!msg.isRead) markMessageAsReaded(msg._id);\n            },\n            className: \"mt-2 text-blue-500 hover:underline\",\n            children: selectedMessage === msg ? \"Zwiń\" : \"Zobacz szczegóły\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this), selectedMessage === msg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 37\n          }, this)]\n        }, msg._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center\",\n          children: \"Brak wiadomo\\u015Bci\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), showSendModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-75 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-maincolor1 p-6 rounded-lg shadow-md w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold mb-4\",\n          children: \"Wy\\u015Blij wiadomo\\u015B\\u0107\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Odbiorca\",\n          value: newMessage.receiver,\n          onChange: e => setNewMessage({\n            ...newMessage,\n            receiver: e.target.value\n          }),\n          className: \"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tytu\\u0142\",\n          value: newMessage.title,\n          onChange: e => setNewMessage({\n            ...newMessage,\n            title: e.target.value\n          }),\n          className: \"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Tre\\u015B\\u0107\",\n          value: newMessage.content,\n          onChange: e => setNewMessage({\n            ...newMessage,\n            content: e.target.value\n          }),\n          className: \"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowSendModal(false);\n              setNewMessage({\n                receiver: '',\n                title: '',\n                content: ''\n              });\n            },\n            className: \"bg-red-500 text-white px-4 py-2 rounded shadow hover:bg-red-600\",\n            children: \"Anuluj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            className: \"bg-maincolor4 text-black px-4 py-2 rounded shadow hover:bg-opacity-80\",\n            children: \"Wy\\u015Blij\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n\n  /*\r\n      return (\r\n          <div className=\"p-6 bg-gray-100 h-screen\">\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Wiadomości prywatne</h2>\r\n      \r\n            {/* Lista wiadomości /}\r\n            <div className=\"mb-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-700 mb-4\">Twoje wiadomości</h3>\r\n              {messages.length > 0 ? (\r\n                <ul className=\"space-y-4\">\r\n                  {messages.map((msg) => (\r\n                    <li\r\n                      key={msg._id}\r\n                      className={`p-4 rounded-lg shadow-md border ${\r\n                        msg.isRead ? 'bg-white' : 'bg-blue-50'\r\n                      }`}\r\n                    >\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"font-bold text-gray-800\">{msg.title}</span>\r\n                        <button\r\n                          onClick={() => deleteMessage(msg._id)}\r\n                          className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                        >\r\n                          Usuń\r\n                        </button>\r\n                      </div>\r\n                      <p className=\"text-sm text-gray-600 mt-2\">Od: {msg.senderId.username}</p>\r\n                      <button\r\n                        onClick={() => setSelectedMessage(msg)}\r\n                        className=\"text-blue-500 hover:underline mt-2\"\r\n                      >\r\n                        Zobacz szczegóły\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p className=\"text-gray-600\">Brak wiadomości</p>\r\n              )}\r\n            </div>\r\n      \r\n            {/* Wyświetlanie szczegółów wiadomości /}\r\n            {selectedMessage && (\r\n              <div className=\"mb-8 bg-white shadow-md rounded-lg p-6 border\">\r\n                <h3 className=\"text-lg font-bold text-gray-800 mb-2\">Szczegóły wiadomości</h3>\r\n                <p>\r\n                  <strong>Od:</strong> {selectedMessage.senderUsername}\r\n                </p>\r\n                <p>\r\n                  <strong>Tytuł:</strong> {selectedMessage.title}\r\n                </p>\r\n                <p>\r\n                  <strong>Treść:</strong> {selectedMessage.content}\r\n                </p>\r\n                <button\r\n                  onClick={() => setSelectedMessage(null)}\r\n                  className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded shadow hover:bg-blue-600\"\r\n                >\r\n                  Zamknij\r\n                </button>\r\n              </div>\r\n            )}\r\n      \r\n            {/* Formularz wysyłania nowej wiadomości /}\r\n            <div className=\"bg-white shadow-md rounded-lg p-6 border\">\r\n              <h3 className=\"text-lg font-bold text-gray-800 mb-4\">Wyślij nową wiadomość</h3>\r\n              <div className=\"mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Odbiorca\"\r\n                  value={newMessage.receiver}\r\n                  onChange={(e) => setNewMessage({ ...newMessage, receiver: e.target.value })}\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Tytuł\"\r\n                  value={newMessage.title}\r\n                  onChange={(e) => setNewMessage({ ...newMessage, title: e.target.value })}\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <textarea\r\n                  placeholder=\"Treść\"\r\n                  value={newMessage.content}\r\n                  onChange={(e) => setNewMessage({ ...newMessage, content: e.target.value })}\r\n                  className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={sendMessage}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded shadow hover:bg-blue-600\"\r\n              >\r\n                Wyślij\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n        */\n}\n_s(PrivateMessages, \"bYERx5FhcMg7rEMNl/LJ7TXUnKM=\");\n_c = PrivateMessages;\nexport default PrivateMessages;\nvar _c;\n$RefreshReg$(_c, \"PrivateMessages\");","map":{"version":3,"names":["React","useState","useEffect","PrivateMessages","username","messages","setMessages","newMessage","setNewMessage","receiver","title","content","selectedMessage","setSelectedMessage","token","localStorage","getItem","showSendModal","setShowSendModal","fetchMessages","response","fetch","method","headers","Authorization","ok","data","json","console","log","error","sendMessage","alert","body","JSON","stringify","errorData","deleteMessage","messageId","prevMessages","filter","msg","_id","markMessageAsReaded","Error","message","length","map","isRead","senderId","Date","createdAt","toLocaleString","e","target","value"],"sources":["C:/Users/48664/source/repos/DawidPodpora/Stworki/client/src/components/ContentComponents/PrivateMessages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction PrivateMessages({username}) {\r\n    const [messages, setMessages] = useState([]); //Przechowywanie wiadomości użytkownika\r\n    const [newMessage, setNewMessage] = useState({receiver: '', title: '', content: ''});//Nowa wiadomość\r\n    const [selectedMessage, setSelectedMessage] = useState(null); //wybrana wiadomość\r\n    const token = localStorage.getItem('token');\r\n    const [showSendModal, setShowSendModal] = useState(false);\r\n\r\n    //Pobieranie wiadomości po załadowaniu komponentu\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try{\r\n                const response = await fetch('http://localhost:8080/api/messages', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                if (response.ok){\r\n                    const data = await response.json();\r\n                    console.log('Pobrane wiadomości: ')\r\n                    setMessages(data);//Ustawienie wiadomości\r\n                }else{\r\n                    console.error('Błąd podczas pobierania wiadomości');\r\n                }\r\n            } catch(error){\r\n                console.error('Błąd serwera:',error);\r\n            }\r\n        };\r\n        fetchMessages();\r\n    }, [token]);\r\n\r\n    //Wysyłąnie nowej wiadomości\r\n    const sendMessage = async () => {\r\n        if(!newMessage.receiver || !newMessage.title || !newMessage.content){\r\n            alert('Wszystkie pola są wymagane!');\r\n            return;\r\n        }\r\n\r\n        //do poprawy\r\n        if(newMessage.receiver === username) {\r\n            alert('Nie możesz wysłać wiadomości do samego siebie.');\r\n            return;\r\n        }\r\n        try{\r\n            const response = await fetch('http://localhost:8080/api/message', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(newMessage),\r\n            });\r\n            if(response.ok){\r\n                alert('Wiadomość wysłana!');\r\n                setNewMessage({receiver: '', title: '', content: ''}); //reset formularza\r\n                setShowSendModal(false);\r\n            } else {\r\n                const errorData = await response.json();\r\n                alert(`Błąd: ${errorData.error || 'Nie udało się wysłać wiadomości.'}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Błąd serwera:', error);\r\n        }\r\n    };\r\n\r\n    //Usuwanie wiadomości\r\n    const deleteMessage = async (messageId) => {\r\n        try{\r\n            const response = await fetch(`http://localhost:8080/api/messages/${messageId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            if (response.ok) {\r\n                setMessages((prevMessages) => prevMessages.filter((msg) => msg._id !== messageId));\r\n            } else {\r\n                console.error('Błąd podczas usuwania wiadomości');\r\n            }\r\n        } catch (error){\r\n            console.error('Błąd serwera:', error);\r\n        }\r\n    };\r\n\r\n    //Oznaczanie wiadomości jako przeczytana\r\n    const markMessageAsReaded = async (messageId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/messages/${messageId}/read`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Nie udało się oznaczyć wiadomości jako przeczytanej.');\r\n            }\r\n            console.log(`Wiadomość ${messageId} oznaczona jako przeczytana.`);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    };\r\n\r\n\r\n    return(\r\n        <div className=\"w-full h-screen bg-black flex flex-col p-5 justify-center text-maincolor4\">\r\n            {/*Zielony komponent na czarnym tle*/}\r\n            <div className=\"w-full h-full bg-maincolor1 p-5 rounded-xl\">\r\n                <div className=\"flex justify-between items-center mb-b\">\r\n                    <h1 className=\"text-2xl font-bold\">Wiadomości prywatne</h1>\r\n                    <button\r\n                    onClick={() => setShowSendModal(true)}\r\n                    className=\"bg-maincolor1 text-maincolor4 border-maincolor2 border px-4 py-2 rounded shadow hover:bg-opacity-80\"\r\n                    >\r\n                        Wyślij wiadomość\r\n                    </button>\r\n                </div>\r\n                {/*Lista wiadomości */}\r\n                <div className=\"p-4 rounded-xl shadow-lg overflow-y-auto space-y-4 h-[70vh]\">\r\n                    {messages.length > 0 ? (\r\n                        messages.map((msg) => (\r\n                            <div\r\n                            key={msg._id}\r\n                            className={`p-4 rounded-lg shadow-md border ${\r\n                                msg.isRead ? \"border-maincolor5\" : \"border-maincolor2\"\r\n                            }`}\r\n                            >\r\n                                <div className=\"flex justify-between items-center\">\r\n                                    <div>\r\n                                        <p className=\"font-bold\">{msg.title}</p>\r\n                                        <p className=\"text-sm\">Od: {msg.senderId.username}</p>\r\n                                        <p className=\"text-xs\">{new Date(msg.createdAt).toLocaleString()}</p>\r\n                                    </div>\r\n                                    <button\r\n                                    onClick={() => deleteMessage(msg._id)}\r\n                                    className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                                    >\r\n                                        Usuń\r\n                                    </button>\r\n                                </div>\r\n                                <button\r\n                                onClick={() => {\r\n                                    setSelectedMessage(selectedMessage === msg ? null : msg);\r\n                                    if (!msg.isRead) markMessageAsReaded(msg._id);\r\n                                }}\r\n                                className=\"mt-2 text-blue-500 hover:underline\"\r\n                                >\r\n                                    {selectedMessage === msg ? \"Zwiń\" : \"Zobacz szczegóły\"}\r\n                                </button>\r\n                                {selectedMessage === msg && (\r\n                                    <div className=\"mt-4\">\r\n                                        <p className=\"text-sm\">{msg.content}</p>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-center\">Brak wiadomości</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            {/*Modal do wysyłania wiadomości*/}\r\n            {showSendModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-75 flex justify-center items-center\">\r\n                    <div className=\"bg-maincolor1 p-6 rounded-lg shadow-md w-1/2\">\r\n                        <h2 className=\"text-lg font-bold mb-4\">Wyślij wiadomość</h2>\r\n                        <input\r\n                        type=\"text\"\r\n                        placeholder=\"Odbiorca\"\r\n                        value={newMessage.receiver}\r\n                        onChange={(e) => setNewMessage({...newMessage, receiver: e.target.value})}\r\n                        className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <input\r\n                        type=\"text\"\r\n                        placeholder=\"Tytuł\"\r\n                        value={newMessage.title}\r\n                        onChange={(e) => setNewMessage({...newMessage, title: e.target.value})}\r\n                        className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <textarea\r\n                        type=\"text\"\r\n                        placeholder=\"Treść\"\r\n                        value={newMessage.content}\r\n                        onChange={(e) => setNewMessage({...newMessage, content: e.target.value})}\r\n                        className=\"w-full mb-4 p-2 border rounded bg-black text-maincolor4\"\r\n                        />\r\n                        <div className=\"flex justify-end space-x-2\">\r\n                            <button\r\n                            onClick={() => {\r\n                                setShowSendModal(false);\r\n                                setNewMessage({receiver:'', title:'', content:''});\r\n                            }}\r\n                            className=\"bg-red-500 text-white px-4 py-2 rounded shadow hover:bg-red-600\"\r\n                            >\r\n                                Anuluj\r\n                            </button>\r\n                            <button\r\n                            onClick={sendMessage}\r\n                            className=\"bg-maincolor4 text-black px-4 py-2 rounded shadow hover:bg-opacity-80\"\r\n                            >\r\n                                Wyślij\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n\r\n/*\r\n    return (\r\n        <div className=\"p-6 bg-gray-100 h-screen\">\r\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Wiadomości prywatne</h2>\r\n    \r\n          {/* Lista wiadomości /}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-xl font-semibold text-gray-700 mb-4\">Twoje wiadomości</h3>\r\n            {messages.length > 0 ? (\r\n              <ul className=\"space-y-4\">\r\n                {messages.map((msg) => (\r\n                  <li\r\n                    key={msg._id}\r\n                    className={`p-4 rounded-lg shadow-md border ${\r\n                      msg.isRead ? 'bg-white' : 'bg-blue-50'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"font-bold text-gray-800\">{msg.title}</span>\r\n                      <button\r\n                        onClick={() => deleteMessage(msg._id)}\r\n                        className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                      >\r\n                        Usuń\r\n                      </button>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 mt-2\">Od: {msg.senderId.username}</p>\r\n                    <button\r\n                      onClick={() => setSelectedMessage(msg)}\r\n                      className=\"text-blue-500 hover:underline mt-2\"\r\n                    >\r\n                      Zobacz szczegóły\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p className=\"text-gray-600\">Brak wiadomości</p>\r\n            )}\r\n          </div>\r\n    \r\n          {/* Wyświetlanie szczegółów wiadomości /}\r\n          {selectedMessage && (\r\n            <div className=\"mb-8 bg-white shadow-md rounded-lg p-6 border\">\r\n              <h3 className=\"text-lg font-bold text-gray-800 mb-2\">Szczegóły wiadomości</h3>\r\n              <p>\r\n                <strong>Od:</strong> {selectedMessage.senderUsername}\r\n              </p>\r\n              <p>\r\n                <strong>Tytuł:</strong> {selectedMessage.title}\r\n              </p>\r\n              <p>\r\n                <strong>Treść:</strong> {selectedMessage.content}\r\n              </p>\r\n              <button\r\n                onClick={() => setSelectedMessage(null)}\r\n                className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded shadow hover:bg-blue-600\"\r\n              >\r\n                Zamknij\r\n              </button>\r\n            </div>\r\n          )}\r\n    \r\n          {/* Formularz wysyłania nowej wiadomości /}\r\n          <div className=\"bg-white shadow-md rounded-lg p-6 border\">\r\n            <h3 className=\"text-lg font-bold text-gray-800 mb-4\">Wyślij nową wiadomość</h3>\r\n            <div className=\"mb-4\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Odbiorca\"\r\n                value={newMessage.receiver}\r\n                onChange={(e) => setNewMessage({ ...newMessage, receiver: e.target.value })}\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Tytuł\"\r\n                value={newMessage.title}\r\n                onChange={(e) => setNewMessage({ ...newMessage, title: e.target.value })}\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <textarea\r\n                placeholder=\"Treść\"\r\n                value={newMessage.content}\r\n                onChange={(e) => setNewMessage({ ...newMessage, content: e.target.value })}\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={sendMessage}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded shadow hover:bg-blue-600\"\r\n            >\r\n              Wyślij\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n      */\r\n    }\r\n    \r\n    export default PrivateMessages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}