{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48664\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\Content.js\";\nimport TestButton2 from './ContentComponents/TestButton2.js'; // Import komponentu TestButton2\nimport TestButton3 from './ContentComponents/TestButton3.js'; // Import komponentu TestButton3\nimport StartPage from './ContentComponents/StartPage.js'; // Import komponentu StartPage\nimport PrivateMessages from './ContentComponents/PrivateMessages.js';\nimport Market from './ContentComponents/market.js';\n\n// Komponent odpowiedzialny za wyświetlanie zawartości w zależności od wybranego przycisku\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Content(_ref) {\n  let {\n    selectedButton,\n    data,\n    NewCreatureActiveButton\n  } = _ref;\n  let ComponentToRender; // Zmienna przechowująca referencję do komponentu, który ma być renderowany\n\n  // Logika wyboru komponentu na podstawie wartości `selectedButton`\n  switch (selectedButton) {\n    case 1:\n      ComponentToRender = StartPage; // Wybrany komponent: StartPage\n      console.log(selectedButton); // Debug: wyświetlenie numeru wybranego przycisku\n      break;\n    case 2:\n      ComponentToRender = TestButton2; // Wybrany komponent: TestButton2\n      break;\n    case 3:\n      ComponentToRender = TestButton3; // Wybrany komponent: TestButton3\n      break;\n    case 4:\n      ComponentToRender = Market;\n      break;\n    default:\n      // Domyślny przypadek, gdy `selectedButton` nie pasuje do żadnej wartości\n      ComponentToRender = () => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Brak komponentu do renderowania\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }, this);\n      break;\n  }\n\n  // Wygląd sekcji zawartości\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute w-4/5 bg-black1 h-screen right-0\",\n    children: /*#__PURE__*/_jsxDEV(ComponentToRender, {\n      data: data,\n      NewCreatureActiveButton: NewCreatureActiveButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = Content;\nexport default Content; // Eksport komponentu Content\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["TestButton2","TestButton3","StartPage","PrivateMessages","Market","Content","selectedButton","data","NewCreatureActiveButton","ComponentToRender","console","log"],"sources":["C:/Users/48664/Desktop/project/client/src/components/Content.js"],"sourcesContent":["import TestButton2 from './ContentComponents/TestButton2.js'; // Import komponentu TestButton2\r\nimport TestButton3 from './ContentComponents/TestButton3.js'; // Import komponentu TestButton3\r\nimport StartPage from './ContentComponents/StartPage.js'; // Import komponentu StartPage\r\nimport PrivateMessages from './ContentComponents/PrivateMessages.js';\r\nimport Market from './ContentComponents/market.js';\r\n\r\n// Komponent odpowiedzialny za wyświetlanie zawartości w zależności od wybranego przycisku\r\nfunction Content({ selectedButton, data, NewCreatureActiveButton}) {\r\n  let ComponentToRender; // Zmienna przechowująca referencję do komponentu, który ma być renderowany\r\n\r\n  // Logika wyboru komponentu na podstawie wartości `selectedButton`\r\n  switch (selectedButton) {\r\n    case 1:\r\n      ComponentToRender = StartPage; // Wybrany komponent: StartPage\r\n      console.log(selectedButton); // Debug: wyświetlenie numeru wybranego przycisku\r\n      break;\r\n    case 2:\r\n      ComponentToRender = TestButton2; // Wybrany komponent: TestButton2\r\n      break;\r\n    case 3:\r\n      ComponentToRender = TestButton3; // Wybrany komponent: TestButton3\r\n      break;\r\n    case 4:\r\n      ComponentToRender = Market;\r\n      break;\r\n    default:\r\n      // Domyślny przypadek, gdy `selectedButton` nie pasuje do żadnej wartości\r\n      ComponentToRender = () => <div>Brak komponentu do renderowania</div>;\r\n      break;\r\n  }\r\n\r\n  // Wygląd sekcji zawartości\r\n  return (\r\n    <div className=\"absolute w-4/5 bg-black1 h-screen right-0\">\r\n      {/* Renderowanie wybranego komponentu */}\r\n      <ComponentToRender data = {data} NewCreatureActiveButton={NewCreatureActiveButton}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content; // Eksport komponentu Content\r\n"],"mappings":";AAAA,OAAOA,WAAW,MAAM,oCAAoC,CAAC,CAAC;AAC9D,OAAOC,WAAW,MAAM,oCAAoC,CAAC,CAAC;AAC9D,OAAOC,SAAS,MAAM,kCAAkC,CAAC,CAAC;AAC1D,OAAOC,eAAe,MAAM,wCAAwC;AACpE,OAAOC,MAAM,MAAM,+BAA+B;;AAElD;AAAA;AACA,SAASC,OAAO,OAAmD;EAAA,IAAlD;IAAEC,cAAc;IAAEC,IAAI;IAAEC;EAAuB,CAAC;EAC/D,IAAIC,iBAAiB,CAAC,CAAC;;EAEvB;EACA,QAAQH,cAAc;IACpB,KAAK,CAAC;MACJG,iBAAiB,GAAGP,SAAS,CAAC,CAAC;MAC/BQ,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC,CAAC,CAAC;MAC7B;IACF,KAAK,CAAC;MACJG,iBAAiB,GAAGT,WAAW,CAAC,CAAC;MACjC;IACF,KAAK,CAAC;MACJS,iBAAiB,GAAGR,WAAW,CAAC,CAAC;MACjC;IACF,KAAK,CAAC;MACJQ,iBAAiB,GAAGL,MAAM;MAC1B;IACF;MACE;MACAK,iBAAiB,GAAG,mBAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0C;MACpE;EAAM;;EAGV;EACA,oBACE;IAAK,SAAS,EAAC,2CAA2C;IAAA,uBAExD,QAAC,iBAAiB;MAAC,IAAI,EAAIF,IAAK;MAAC,uBAAuB,EAAEC;IAAwB;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAChF;AAEV;AAAC,KA/BQH,OAAO;AAiChB,eAAeA,OAAO,CAAC,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}