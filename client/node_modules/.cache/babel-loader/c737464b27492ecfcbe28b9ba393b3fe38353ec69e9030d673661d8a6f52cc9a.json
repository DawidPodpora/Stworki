{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Barnaba\\\\Desktop\\\\Nowy folder\\\\client\\\\src\\\\components\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport Menu from './Menu.js'; // Import komponentu Menu\nimport Options from './Options.js'; // Import komponentu Options\nimport Content from './Content.js'; // Import komponentu Content\nimport FirstOrb from './FirstOrb.js';\nimport React, { useState, useEffect } from 'react'; // Import React i hooka useState do zarządzania stanem\n\n// Główny komponent strony\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [username, setUsername] = useState(null);\n  const [firstChoice, setFirstChoice] = useState(false);\n  const [newCreature, setNewCreature] = useState(false);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('token'); // Pobranie tokena z localStorage\n      if (!token) {\n        console.warn('Brak tokenu w localStorage');\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:8080/api/userData', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}` // Wysłanie tokena w nagłówku\n          }\n        });\n\n        if (!response.ok) {\n          console.error('Błąd pobierania danych użytkownika:', response.statusText);\n          return;\n        }\n        const data = await response.json();\n        setUsername(data.username); // Aktualizacja stanu z nazwą użytkownika\n        if (data.isFirstLog === true) {\n          setFirstChoice(true);\n        }\n      } catch (error) {\n        console.error('Błąd podczas pobierania danych użytkownika:', error);\n      }\n    };\n    fetchUserData(); // Wywołanie funkcji\n  }, []);\n\n  // Stan dla widoczności panelu opcji\n  const [isOptionsVisible, setOptionsVisible] = useState(false);\n\n  // Stan dla aktualnie wybranego przycisku w menu\n  const [selectedButton, setSelectedButton] = useState(1);\n\n  // Funkcja do przełączania widoczności opcji\n  const toggleOptionVisibility = () => {\n    setOptionsVisible(prevState => !prevState); // Odwrócenie obecnego stanu (true <-> false)\n  };\n\n  // Funkcja do obsługi kliknięcia przycisku w menu\n  const handleButtonClick = buttonNumber => {\n    setSelectedButton(buttonNumber); // Ustawienie wybranego numeru przycisku\n  };\n\n  const firsOrbActiveButton = () => {\n    console.log(\"zmiana na co innego\");\n    setFirstChoice(firstChoice => !firstChoice);\n  };\n  const NewCreatureActiveButton = () => {\n    console.log(\"zmiana na co innego\");\n    setFirstChoice(firstChoice => !firstChoice);\n  };\n  // Wygląd strony\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-maincolor1 absolute h-screen w-screen flex\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      toogleOptions: toggleOptionVisibility // Przekazanie funkcji przełączania opcji\n      ,\n      onButtonClick: handleButtonClick // Przekazanie funkcji obsługi kliknięcia przycisku\n      ,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      selectedButton: selectedButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isOptionsVisible && /*#__PURE__*/_jsxDEV(Options, {\n      toogleOptions: toggleOptionVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) // Przekazanie funkcji zamykania opcji\n    , firstChoice && /*#__PURE__*/_jsxDEV(FirstOrb, {\n      firsOrbActiveButton: firsOrbActiveButton,\n      NewCreatureActiveButton: NewCreatureActiveButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"veqqzR0PrqXfys0xiOiCH+wZVk0=\");\n_c = MainPage;\nexport default MainPage; // Eksport głównego komponentu\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["Menu","Options","Content","FirstOrb","React","useState","useEffect","MainPage","username","setUsername","firstChoice","setFirstChoice","newCreature","setNewCreature","fetchUserData","token","localStorage","getItem","console","warn","response","fetch","method","headers","ok","error","statusText","data","json","isFirstLog","isOptionsVisible","setOptionsVisible","selectedButton","setSelectedButton","toggleOptionVisibility","prevState","handleButtonClick","buttonNumber","firsOrbActiveButton","log","NewCreatureActiveButton"],"sources":["C:/Users/Barnaba/Desktop/Nowy folder/client/src/components/MainPage.js"],"sourcesContent":["import Menu from './Menu.js'; // Import komponentu Menu\r\nimport Options from './Options.js'; // Import komponentu Options\r\nimport Content from './Content.js'; // Import komponentu Content\r\nimport FirstOrb from './FirstOrb.js';\r\nimport React, { useState, useEffect } from 'react'; // Import React i hooka useState do zarządzania stanem\r\n\r\n// Główny komponent strony\r\nfunction MainPage() {\r\n  const [username, setUsername] = useState(null);\r\n  const [firstChoice, setFirstChoice] = useState(false);\r\n  const [newCreature, setNewCreature] = useState(false);\r\n    useEffect(() => {\r\n      const fetchUserData = async () => {\r\n          const token = localStorage.getItem('token'); // Pobranie tokena z localStorage\r\n          if (!token) {\r\n              console.warn('Brak tokenu w localStorage');\r\n              return;\r\n          }\r\n  \r\n          try {\r\n              const response = await fetch('http://localhost:8080/api/userData', {\r\n                  method: 'GET',\r\n                  headers: {\r\n                      'Authorization': `Bearer ${token}`, // Wysłanie tokena w nagłówku\r\n                  },\r\n              });\r\n  \r\n              if (!response.ok) {\r\n                  console.error('Błąd pobierania danych użytkownika:', response.statusText);\r\n                  return;\r\n              }\r\n              \r\n              const data = await response.json();\r\n              setUsername(data.username); // Aktualizacja stanu z nazwą użytkownika\r\n              if(data.isFirstLog === true)\r\n              {\r\n                setFirstChoice(true);\r\n                \r\n              }\r\n          } catch (error) {\r\n              console.error('Błąd podczas pobierania danych użytkownika:', error);\r\n          }\r\n\r\n      };\r\n  \r\n      fetchUserData(); // Wywołanie funkcji\r\n  }, []);\r\n\r\n  // Stan dla widoczności panelu opcji\r\n  const [isOptionsVisible, setOptionsVisible] = useState(false);\r\n  \r\n  // Stan dla aktualnie wybranego przycisku w menu\r\n  const [selectedButton, setSelectedButton] = useState(1);\r\n\r\n  // Funkcja do przełączania widoczności opcji\r\n  const toggleOptionVisibility = () => {\r\n    setOptionsVisible((prevState) => !prevState); // Odwrócenie obecnego stanu (true <-> false)\r\n  };\r\n\r\n  // Funkcja do obsługi kliknięcia przycisku w menu\r\n  const handleButtonClick = (buttonNumber) => {\r\n    setSelectedButton(buttonNumber); // Ustawienie wybranego numeru przycisku\r\n  };\r\n  const firsOrbActiveButton = () =>{\r\n    console.log(\"zmiana na co innego\");\r\n    setFirstChoice((firstChoice) => !firstChoice);\r\n  }\r\n  const NewCreatureActiveButton = () =>{\r\n    console.log(\"zmiana na co innego\");\r\n    setFirstChoice((firstChoice) => !firstChoice);\r\n  }\r\n  // Wygląd strony\r\n  return (\r\n    <div className=\"bg-maincolor1 absolute h-screen w-screen flex\">\r\n      {/* Komponent menu */}\r\n      <Menu \r\n        toogleOptions={toggleOptionVisibility} // Przekazanie funkcji przełączania opcji\r\n        onButtonClick={handleButtonClick} // Przekazanie funkcji obsługi kliknięcia przycisku\r\n        username={username}\r\n      />\r\n\r\n      {/* Komponent treści, wyświetlający zawartość na podstawie wybranego przycisku */}\r\n      <Content selectedButton={selectedButton} />\r\n\r\n      {/* Warunkowe wyświetlanie panelu opcji */}\r\n      {isOptionsVisible && (\r\n        <Options toogleOptions={toggleOptionVisibility} /> // Przekazanie funkcji zamykania opcji\r\n      )}\r\n      {firstChoice && (\r\n      <FirstOrb firsOrbActiveButton={firsOrbActiveButton} NewCreatureActiveButton={NewCreatureActiveButton}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage; // Eksport głównego komponentu\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,WAAW,CAAC,CAAC;AAC9B,OAAOC,OAAO,MAAM,cAAc,CAAC,CAAC;AACpC,OAAOC,OAAO,MAAM,cAAc,CAAC,CAAC;AACpC,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;;AAEpD;AAAA;AACA,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnDC,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAG,YAAY;MAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAI,CAACF,KAAK,EAAE;QACRG,OAAO,CAACC,IAAI,CAAC,4BAA4B,CAAC;QAC1C;MACJ;MAEA,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UAC/DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,eAAe,EAAG,UAASR,KAAM,EAAC,CAAE;UACxC;QACJ,CAAC,CAAC;;QAEF,IAAI,CAACK,QAAQ,CAACI,EAAE,EAAE;UACdN,OAAO,CAACO,KAAK,CAAC,qCAAqC,EAAEL,QAAQ,CAACM,UAAU,CAAC;UACzE;QACJ;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;QAClCnB,WAAW,CAACkB,IAAI,CAACnB,QAAQ,CAAC,CAAC,CAAC;QAC5B,IAAGmB,IAAI,CAACE,UAAU,KAAK,IAAI,EAC3B;UACElB,cAAc,CAAC,IAAI,CAAC;QAEtB;MACJ,CAAC,CAAC,OAAOc,KAAK,EAAE;QACZP,OAAO,CAACO,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACvE;IAEJ,CAAC;IAEDX,aAAa,EAAE,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM,CAACgB,gBAAgB,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAM6B,sBAAsB,GAAG,MAAM;IACnCH,iBAAiB,CAAEI,SAAS,IAAK,CAACA,SAAS,CAAC,CAAC,CAAC;EAChD,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,YAAY,IAAK;IAC1CJ,iBAAiB,CAACI,YAAY,CAAC,CAAC,CAAC;EACnC,CAAC;;EACD,MAAMC,mBAAmB,GAAG,MAAK;IAC/BpB,OAAO,CAACqB,GAAG,CAAC,qBAAqB,CAAC;IAClC5B,cAAc,CAAED,WAAW,IAAK,CAACA,WAAW,CAAC;EAC/C,CAAC;EACD,MAAM8B,uBAAuB,GAAG,MAAK;IACnCtB,OAAO,CAACqB,GAAG,CAAC,qBAAqB,CAAC;IAClC5B,cAAc,CAAED,WAAW,IAAK,CAACA,WAAW,CAAC;EAC/C,CAAC;EACD;EACA,oBACE;IAAK,SAAS,EAAC,+CAA+C;IAAA,wBAE5D,QAAC,IAAI;MACH,aAAa,EAAEwB,sBAAuB,CAAC;MAAA;MACvC,aAAa,EAAEE,iBAAkB,CAAC;MAAA;MAClC,QAAQ,EAAE5B;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB,eAGF,QAAC,OAAO;MAAC,cAAc,EAAEwB;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,EAG1CF,gBAAgB,iBACf,QAAC,OAAO;MAAC,aAAa,EAAEI;IAAuB;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;IACpD,EACAxB,WAAW,iBACZ,QAAC,QAAQ;MAAC,mBAAmB,EAAE4B,mBAAoB;MAAC,uBAAuB,EAAEE;IAAwB;MAAA;MAAA;MAAA;IAAA,QACpG;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAtFQjC,QAAQ;AAAA,KAARA,QAAQ;AAwFjB,eAAeA,QAAQ,CAAC,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}