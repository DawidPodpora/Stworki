{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48664\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Import biblioteki React\nimport { useTranslation } from 'react-i18next'; // Import hooka `useTranslation` z biblioteki do obsługi tłumaczeń\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Menu(_ref) {\n  _s();\n  let {\n    toogleOptions,\n    onButtonClick,\n    username\n  } = _ref;\n  const {\n    t,\n    i18n\n  } = useTranslation(); // Funkcja `t` służy do tłumaczeń w `react-i18next`\n  const navigate = useNavigate(); // Hook do nawigacji\n  const [currentLanguage, setCurrentLanguage] = useState(localStorage.getItem('language') || 'en');\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('language');\n    if (savedLanguage && savedLanguage !== i18n.language) {\n      i18n.changeLanguage(savedLanguage);\n      setCurrentLanguage(savedLanguage);\n    }\n  }, [i18n.language]);\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/logout', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const result = await response.json();\n      if (!response.ok) throw new Error(result.error || 'Nie udało się wylogować');\n\n      // Usuń token i userId z localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n\n      // Przekieruj użytkownika na stronę logowania lub główną\n      navigate('/');\n    } catch (error) {\n      console.error('Błąd podczas wylogowywania:', error.message);\n      alert('Nie udało się wylogować');\n    }\n  };\n\n  // Lista etykiet dla przycisków menu, przetłumaczona za pomocą `t`\n  const buttonLabels = [t('home'),\n  // Tłumaczenie dla \"Strona główna\"\n  t('myCreatures'),\n  // Tłumaczenie dla \"Moje stworki\"\n  t('shop'),\n  // Tłumaczenie dla \"Sklep\"\n  t('privateMessages'),\n  // Tłumaczenie dla dodatkowej opcji D\n  t('market'),\n  // Tłumaczenie dla dodatkowej opcji E\n  t('missions'),\n  // Tłumaczenie dla dodatkowej opcji E\n  t('guilds') // Tłumaczenie dla dodatkowej opcji F\n  ];\n\n  const [buttonPressed, setButtonPressed] = useState(0);\n\n  // Wygląd i logika komponentu\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col items-center bg-gradient-to-r from-maincolor1 via-black to-maincolor1 text-maincolor4 space-y-4 w-1/5 h-screen rounded-xl pt-10 border-r-2 border-maincolor5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: username ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [t('welcome'), \", \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('loadingUser')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), buttonLabels.map((label, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onButtonClick(index + 1);\n        setButtonPressed(index);\n      },\n      className: `border-maincolor2 rounded-xl border py-2 px-4 w-4/5 transition duration-300 ${buttonPressed === index ? \"border-maincolor5 shadow-maincolor5 bg-maincolor4 text-black1 bg-opacity-75\" // Kolor aktywnego przycisku\n      : \"hover:border-maincolor5 hover:shadow-maincolor5 hover:bg-maincolor4 shadow-buttonshadow hover:text-black1 hover:bg-opacity-75\"}`,\n      children: label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between absolute bottom-10 w-3/5\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toogleOptions,\n        className: \"w-1/3 border-maincolor5 border rounded-full\",\n        children: [t('options'), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"w-1/3 border-maincolor5 border rounded-full\",\n        children: t('logout')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"cMtDAjTlSoRXSBGYzioqHrLQSXQ=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = Menu;\nexport default Menu; // Eksport komponentu\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useNavigate","Menu","toogleOptions","onButtonClick","username","t","i18n","navigate","currentLanguage","setCurrentLanguage","localStorage","getItem","savedLanguage","language","changeLanguage","handleLogout","response","fetch","method","headers","Authorization","result","json","ok","Error","error","removeItem","console","message","alert","buttonLabels","buttonPressed","setButtonPressed","map","label","index"],"sources":["C:/Users/48664/Desktop/project/client/src/components/Menu.js"],"sourcesContent":["import React, { useState, useEffect } from 'react' // Import biblioteki React\r\nimport { useTranslation } from 'react-i18next'; // Import hooka `useTranslation` z biblioteki do obsługi tłumaczeń\r\nimport { useNavigate } from 'react-router-dom'; \r\n\r\nfunction Menu({ toogleOptions, onButtonClick, username }) {\r\n  const { t, i18n } = useTranslation(); // Funkcja `t` służy do tłumaczeń w `react-i18next`\r\n  const navigate = useNavigate(); // Hook do nawigacji\r\n  const [currentLanguage, setCurrentLanguage] = useState(localStorage.getItem('language') || 'en');\r\n\r\n\r\n  useEffect(() => {\r\n    const savedLanguage = localStorage.getItem('language');\r\n    if(savedLanguage && savedLanguage !== i18n.language){\r\n      i18n.changeLanguage(savedLanguage);\r\n      setCurrentLanguage(savedLanguage);\r\n    }\r\n  }, [i18n.language]);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:8080/api/logout', {\r\n            method: 'POST',\r\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (!response.ok) throw new Error(result.error || 'Nie udało się wylogować');\r\n\r\n        // Usuń token i userId z localStorage\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId');\r\n\r\n        // Przekieruj użytkownika na stronę logowania lub główną\r\n        navigate('/');\r\n    } catch (error) {\r\n        console.error('Błąd podczas wylogowywania:', error.message);\r\n        alert('Nie udało się wylogować');\r\n    }\r\n};\r\n\r\n  // Lista etykiet dla przycisków menu, przetłumaczona za pomocą `t`\r\n  const buttonLabels = [\r\n    t('home'),       // Tłumaczenie dla \"Strona główna\"\r\n    t('myCreatures'),        // Tłumaczenie dla \"Moje stworki\"\r\n    t('shop'),               // Tłumaczenie dla \"Sklep\"\r\n    t('privateMessages'), // Tłumaczenie dla dodatkowej opcji D\r\n    t('market'),             // Tłumaczenie dla dodatkowej opcji E\r\n    t('missions'),             // Tłumaczenie dla dodatkowej opcji E\r\n    t('guilds'),             // Tłumaczenie dla dodatkowej opcji F\r\n  ];\r\n\r\n  const [buttonPressed, setButtonPressed] = useState(0);\r\n  \r\n\r\n  // Wygląd i logika komponentu\r\n  return (\r\n    <div className=\"relative flex flex-col items-center bg-gradient-to-r from-maincolor1 via-black to-maincolor1 text-maincolor4 space-y-4 w-1/5 h-screen rounded-xl pt-10 border-r-2 border-maincolor5\">\r\n      {/* Przyciski menu */}\r\n      <div>\r\n        {username ? <h1>{t('welcome')}, {username}!</h1> : <p>{t('loadingUser')}</p>}\r\n      </div>\r\n      {buttonLabels.map((label, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={() => { onButtonClick(index + 1); setButtonPressed(index); }}\r\n          className={`border-maincolor2 rounded-xl border py-2 px-4 w-4/5 transition duration-300 ${\r\n            buttonPressed === index \r\n              ? \"border-maincolor5 shadow-maincolor5 bg-maincolor4 text-black1 bg-opacity-75\" // Kolor aktywnego przycisku\r\n              : \"hover:border-maincolor5 hover:shadow-maincolor5 hover:bg-maincolor4 shadow-buttonshadow hover:text-black1 hover:bg-opacity-75\"\r\n          }`}\r\n        >\r\n          {label}\r\n        </button>\r\n      ))}\r\n    \r\n      {/* Przyciski na dole menu */}\r\n      <div className=\"flex justify-between absolute bottom-10 w-3/5\">\r\n        {/* Przycisk opcji */}\r\n        <button onClick={toogleOptions} className=\"w-1/3 border-maincolor5 border rounded-full\">\r\n          {t('options')} {/* Tłumaczenie dla \"options\" */}\r\n        </button>\r\n        \r\n        {/* Przycisk wylogowania */}\r\n        <button onClick={handleLogout} className=\"w-1/3 border-maincolor5 border rounded-full\">\r\n          {t('logout')}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu; // Eksport komponentu\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}