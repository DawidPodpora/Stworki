{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Barnaba\\\\Desktop\\\\Nowy folder\\\\client\\\\src\\\\components\\\\Password.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link i useNavigate do nawigacji między stronami\nimport toast, { Toaster } from 'react-hot-toast'; // Biblioteka do wyświetlania powiadomień\nimport { useFormik } from 'formik'; // Hook do zarządzania stanem formularza\nimport { passwordValidate } from '../helper/validate'; // Funkcja walidacji hasła\nimport useFetch from '../hooks/fetch.hook'; // Hook do pobierania danych z API\nimport { useAuthStore } from '../store/store'; // Pobieranie globalnego stanu aplikacji\nimport { verifyPassword } from '../helper/helper'; // Funkcja do weryfikacji hasła\nimport styles from '../styles/Username.module.css'; // Import stylów CSS\nimport { RedirectIfLoggedIn } from '../components/RedirectIfLoggedIn';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Password() {\n  _s();\n  const navigate = useNavigate(); // Hook do nawigacji\n  const {\n    username\n  } = useAuthStore(state => state.auth); // Pobieranie nazwy użytkownika z globalnego stanu\n  const [{\n    isLoading,\n    apiData,\n    serverError\n  }] = useFetch(`/user/${username}`); // Pobranie danych użytkownika z API\n\n  // Konfiguracja formularza za pomocą useFormik\n  const formik = useFormik({\n    initialValues: {\n      password: '' // Początkowa wartość pola hasła\n    },\n\n    validate: passwordValidate,\n    // Funkcja walidacji dla formularza\n    validateOnBlur: false,\n    // Wyłączenie walidacji podczas opuszczania pola\n    validateOnChange: false,\n    // Wyłączenie walidacji przy każdej zmianie pola\n    onSubmit: async values => {\n      // Funkcja wykonywana po przesłaniu formularza\n      let loginPromise = verifyPassword({\n        username,\n        password: values.password\n      }); // Weryfikacja hasła użytkownika\n\n      // Wyświetlanie powiadomień w zależności od wyniku\n      toast.promise(loginPromise, {\n        loading: 'Checking...',\n        // Powiadomienie podczas weryfikacji\n        success: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Login Successfully...!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 18\n        }, this),\n        // Powiadomienie o sukcesie\n        error: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password Not Match!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this) // Powiadomienie o błędzie\n      });\n\n      // Po pomyślnym zalogowaniu zapisanie tokena i przekierowanie na stronę główną\n      loginPromise.then(res => {\n        const {\n          token\n        } = res.data; // Pobierz token z odpowiedzi\n        console.log('Otrzymany token:', token); // Debugowanie\n\n        // Dekodowanie tokena JWT, aby uzyskać userId\n        const decodedToken = jwt_decode(token);\n        const userId = decodedToken.userId; // Wyciągnięcie userId z dekodowanego tokena\n        console.log('Otrzymany userId:', userId); // Debugowanie\n\n        // Zapis tokena i userId w localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('userId', userId);\n        navigate('/mainpage'); // Przekierowanie na stronę główną\n      });\n    }\n  });\n\n  // Wyświetlanie stanu ładowania\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-2xl font-bold\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 25\n  }, this);\n  // Obsługa błędu serwera\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-xl text-red-500\",\n    children: serverError.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(RedirectIfLoggedIn, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Toaster, {\n        position: \"top-center\",\n        reverseOrder: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title flex flex-col items-center absolute top-1/4 left-1/2 transform -translate-x-1/2\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-5xl font-bold text-white\",\n              children: [\"Cze\\u015B\\u0107 \", (apiData === null || apiData === void 0 ? void 0 : apiData.firstName) || (apiData === null || apiData === void 0 ? void 0 : apiData.username)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"py-2\",\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textbox flex flex-col items-center gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...formik.getFieldProps('password'),\n                // Obsługa formularza za pomocą Formik\n                className: styles.textbox,\n                type: \"text\",\n                placeholder: \"Has\\u0142o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.btn,\n                type: \"submit\",\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-4\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500\",\n                children: [\"Forgot Password?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"text-red-500\",\n                  to: \"/recovery\",\n                  children: \"Recover Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Password, \"LpZ0OtBbwO855E1UOOZlp2lB/JY=\", false, function () {\n  return [useNavigate, useAuthStore, useFetch, useFormik];\n});\n_c = Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["React","Link","useNavigate","toast","Toaster","useFormik","passwordValidate","useFetch","useAuthStore","verifyPassword","styles","RedirectIfLoggedIn","jwt_decode","Password","navigate","username","state","auth","isLoading","apiData","serverError","formik","initialValues","password","validate","validateOnBlur","validateOnChange","onSubmit","values","loginPromise","promise","loading","success","error","then","res","token","data","console","log","decodedToken","userId","localStorage","setItem","message","firstName","handleSubmit","getFieldProps","textbox","btn"],"sources":["C:/Users/Barnaba/Desktop/Nowy folder/client/src/components/Password.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link i useNavigate do nawigacji między stronami\r\nimport toast, { Toaster } from 'react-hot-toast'; // Biblioteka do wyświetlania powiadomień\r\nimport { useFormik } from 'formik'; // Hook do zarządzania stanem formularza\r\nimport { passwordValidate } from '../helper/validate'; // Funkcja walidacji hasła\r\nimport useFetch from '../hooks/fetch.hook'; // Hook do pobierania danych z API\r\nimport { useAuthStore } from '../store/store'; // Pobieranie globalnego stanu aplikacji\r\nimport { verifyPassword } from '../helper/helper'; // Funkcja do weryfikacji hasła\r\nimport styles from '../styles/Username.module.css'; // Import stylów CSS\r\nimport { RedirectIfLoggedIn } from '../components/RedirectIfLoggedIn';\r\nimport jwt_decode from \"jwt-decode\"; \r\nexport default function Password() {\r\n  const navigate = useNavigate(); // Hook do nawigacji\r\n  const { username } = useAuthStore(state => state.auth); // Pobieranie nazwy użytkownika z globalnego stanu\r\n  const [{ isLoading, apiData, serverError }] = useFetch(`/user/${username}`); // Pobranie danych użytkownika z API\r\n\r\n  // Konfiguracja formularza za pomocą useFormik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: '', // Początkowa wartość pola hasła\r\n    },\r\n    validate: passwordValidate, // Funkcja walidacji dla formularza\r\n    validateOnBlur: false, // Wyłączenie walidacji podczas opuszczania pola\r\n    validateOnChange: false, // Wyłączenie walidacji przy każdej zmianie pola\r\n    onSubmit: async (values) => {\r\n      // Funkcja wykonywana po przesłaniu formularza\r\n      let loginPromise = verifyPassword({\r\n        username,\r\n        password: values.password,\r\n      }); // Weryfikacja hasła użytkownika\r\n\r\n      // Wyświetlanie powiadomień w zależności od wyniku\r\n      toast.promise(loginPromise, {\r\n        loading: 'Checking...', // Powiadomienie podczas weryfikacji\r\n        success: <b>Login Successfully...!</b>, // Powiadomienie o sukcesie\r\n        error: <b>Password Not Match!</b>, // Powiadomienie o błędzie\r\n      });\r\n\r\n      // Po pomyślnym zalogowaniu zapisanie tokena i przekierowanie na stronę główną\r\n      loginPromise.then((res) => {\r\n        const { token } = res.data; // Pobierz token z odpowiedzi\r\n        console.log('Otrzymany token:', token); // Debugowanie\r\n    \r\n        // Dekodowanie tokena JWT, aby uzyskać userId\r\n        const decodedToken = jwt_decode(token);\r\n        const userId = decodedToken.userId; // Wyciągnięcie userId z dekodowanego tokena\r\n        console.log('Otrzymany userId:', userId); // Debugowanie\r\n    \r\n        // Zapis tokena i userId w localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('userId', userId);\r\n    \r\n        navigate('/mainpage'); // Przekierowanie na stronę główną\r\n      });\r\n    },\r\n  });\r\n\r\n  // Wyświetlanie stanu ładowania\r\n  if (isLoading) return <h1 className=\"text-2xl font-bold\">isLoading</h1>;\r\n  // Obsługa błędu serwera\r\n  if (serverError) return <h1 className=\"text-xl text-red-500\">{serverError.message}</h1>;\r\n\r\n  return (\r\n    <RedirectIfLoggedIn>\r\n    <div className=\"container mx-auto\">\r\n      {/* Komponent Toaster do wyświetlania powiadomień */}\r\n      <Toaster position=\"top-center\" reverseOrder={false}></Toaster>\r\n\r\n      {/* Główna sekcja logowania */}\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"w-full max-w-md\">\r\n          {/* Sekcja powitania */}\r\n          <div className=\"title flex flex-col items-center absolute top-1/4 left-1/2 transform -translate-x-1/2\">\r\n            <h4 className=\"text-5xl font-bold text-white\">\r\n              {/* Wyświetlenie powitania z imieniem lub nazwą użytkownika */}\r\n              Cześć {apiData?.firstName || apiData?.username}\r\n            </h4>\r\n          </div>\r\n\r\n          {/* Formularz logowania */}\r\n          <form className=\"py-2\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"textbox flex flex-col items-center gap-6\">\r\n              {/* Pole tekstowe do wpisywania hasła */}\r\n              <input\r\n                {...formik.getFieldProps('password')} // Obsługa formularza za pomocą Formik\r\n                className={styles.textbox}\r\n                type=\"text\"\r\n                placeholder=\"Hasło\"\r\n              />\r\n              {/* Przycisk do wysyłania formularza */}\r\n              <button className={styles.btn} type=\"submit\">\r\n                Sign In\r\n              </button>\r\n            </div>\r\n\r\n            {/* Link do odzyskiwania hasła */}\r\n            <div className=\"text-center py-4\">\r\n              <span className=\"text-gray-500\">\r\n                Forgot Password?{' '}\r\n                <Link className=\"text-red-500\" to=\"/recovery\">\r\n                  Recover Now\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </RedirectIfLoggedIn>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AACtD,OAAOC,KAAK,IAAIC,OAAO,QAAQ,iBAAiB,CAAC,CAAC;AAClD,SAASC,SAAS,QAAQ,QAAQ,CAAC,CAAC;AACpC,SAASC,gBAAgB,QAAQ,oBAAoB,CAAC,CAAC;AACvD,OAAOC,QAAQ,MAAM,qBAAqB,CAAC,CAAC;AAC5C,SAASC,YAAY,QAAQ,gBAAgB,CAAC,CAAC;AAC/C,SAASC,cAAc,QAAQ,kBAAkB,CAAC,CAAC;AACnD,OAAOC,MAAM,MAAM,+BAA+B,CAAC,CAAC;AACpD,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,OAAOC,UAAU,MAAM,YAAY;AAAC;AACpC,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC,MAAMC,QAAQ,GAAGZ,WAAW,EAAE,CAAC,CAAC;EAChC,MAAM;IAAEa;EAAS,CAAC,GAAGP,YAAY,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAY,CAAC,CAAC,GAAGb,QAAQ,CAAE,SAAQQ,QAAS,EAAC,CAAC,CAAC,CAAC;;EAE7E;EACA,MAAMM,MAAM,GAAGhB,SAAS,CAAC;IACvBiB,aAAa,EAAE;MACbC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;;IACDC,QAAQ,EAAElB,gBAAgB;IAAE;IAC5BmB,cAAc,EAAE,KAAK;IAAE;IACvBC,gBAAgB,EAAE,KAAK;IAAE;IACzBC,QAAQ,EAAE,MAAOC,MAAM,IAAK;MAC1B;MACA,IAAIC,YAAY,GAAGpB,cAAc,CAAC;QAChCM,QAAQ;QACRQ,QAAQ,EAAEK,MAAM,CAACL;MACnB,CAAC,CAAC,CAAC,CAAC;;MAEJ;MACApB,KAAK,CAAC2B,OAAO,CAACD,YAAY,EAAE;QAC1BE,OAAO,EAAE,aAAa;QAAE;QACxBC,OAAO,eAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA6B;QAAE;QACxCC,KAAK,eAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0B,CAAE;MACrC,CAAC,CAAC;;MAEF;MACAJ,YAAY,CAACK,IAAI,CAAEC,GAAG,IAAK;QACzB,MAAM;UAAEC;QAAM,CAAC,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC;QAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,KAAK,CAAC,CAAC,CAAC;;QAExC;QACA,MAAMI,YAAY,GAAG5B,UAAU,CAACwB,KAAK,CAAC;QACtC,MAAMK,MAAM,GAAGD,YAAY,CAACC,MAAM,CAAC,CAAC;QACpCH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,MAAM,CAAC,CAAC,CAAC;;QAE1C;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;QACpCM,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,MAAM,CAAC;QAEtC3B,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;;EAEF;EACA,IAAII,SAAS,EAAE,oBAAO;IAAI,SAAS,EAAC,oBAAoB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAe;EACvE;EACA,IAAIE,WAAW,EAAE,oBAAO;IAAI,SAAS,EAAC,sBAAsB;IAAA,UAAEA,WAAW,CAACwB;EAAO;IAAA;IAAA;IAAA;EAAA,QAAM;EAEvF,oBACE,QAAC,kBAAkB;IAAA,uBACnB;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAEhC,QAAC,OAAO;QAAC,QAAQ,EAAC,YAAY;QAAC,YAAY,EAAE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAW,eAG9D;QAAK,SAAS,EAAC,2CAA2C;QAAA,uBACxD;UAAK,SAAS,EAAC,iBAAiB;UAAA,wBAE9B;YAAK,SAAS,EAAC,uFAAuF;YAAA,uBACpG;cAAI,SAAS,EAAC,+BAA+B;cAAA,+BAEpC,CAAAzB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE0B,SAAS,MAAI1B,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEJ,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA;UAC3C;YAAA;YAAA;YAAA;UAAA,QACD,eAGN;YAAM,SAAS,EAAC,MAAM;YAAC,QAAQ,EAAEM,MAAM,CAACyB,YAAa;YAAA,wBACnD;cAAK,SAAS,EAAC,0CAA0C;cAAA,wBAEvD;gBAAA,GACMzB,MAAM,CAAC0B,aAAa,CAAC,UAAU,CAAC;gBAAE;gBACtC,SAAS,EAAErC,MAAM,CAACsC,OAAQ;gBAC1B,IAAI,EAAC,MAAM;gBACX,WAAW,EAAC;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QACnB,eAEF;gBAAQ,SAAS,EAAEtC,MAAM,CAACuC,GAAI;gBAAC,IAAI,EAAC,QAAQ;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAEnC;YAAA;cAAA;cAAA;cAAA;YAAA,QACL,eAGN;cAAK,SAAS,EAAC,kBAAkB;cAAA,uBAC/B;gBAAM,SAAS,EAAC,eAAe;gBAAA,+BACZ,GAAG,eACpB,QAAC,IAAI;kBAAC,SAAS,EAAC,cAAc;kBAAC,EAAE,EAAC,WAAW;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAEtC;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACF;cAAA;cAAA;cAAA;YAAA,QACH;UAAA;YAAA;YAAA;YAAA;UAAA,QACD;QAAA;UAAA;UAAA;UAAA;QAAA;MACH;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACe;AAEzB;AAAC,GAnGuBpC,QAAQ;EAAA,QACbX,WAAW,EACPM,YAAY,EACaD,QAAQ,EAGvCF,SAAS;AAAA;AAAA,KANFQ,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}