{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48664\\\\Downloads\\\\project\\\\project\\\\client\\\\src\\\\components\\\\Username.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast'; // Obsługa powiadomień (toastów)\nimport { useFormik } from 'formik'; // Obsługa formularzy w React\nimport { usernameValidate } from '../helper/validate'; // Funkcja walidacyjna dla nazwy użytkownika\nimport { useAuthStore } from '../store/store'; // Hook do zarządzania stanem autoryzacji\n\nimport styles from '../styles/Username.module.css'; // Import stylów dla komponentu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Username() {\n  _s();\n  const navigate = useNavigate(); // Hook do nawigacji między stronami\n  const setUsername = useAuthStore(state => state.setUsername); // Pobranie funkcji do ustawiania nazwy użytkownika z globalnego stanu\n\n  // Konfiguracja formularza przy użyciu Formik\n  const formik = useFormik({\n    initialValues: {\n      // Domyślne wartości pól formularza\n      username: '' // Nazwa użytkownika jako pusty string\n    },\n\n    validate: usernameValidate,\n    // Funkcja walidacyjna dla nazwy użytkownika\n    validateOnBlur: false,\n    // Wyłączenie walidacji podczas opuszczenia pola\n    validateOnChange: false,\n    // Wyłączenie walidacji podczas zmiany wartości w polu\n    onSubmit: async values => {\n      // Funkcja wywoływana po przesłaniu formularza\n      setUsername(values.username); // Ustawienie nazwy użytkownika w globalnym stanie\n      navigate('/password'); // Przejście do strony z hasłem\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"py-1\",\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox flex flex-col items-center gap-7\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('username'),\n              className: styles.textbox,\n              type: \"text\",\n              placeholder: \"Wpisz nazw\\u0119\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${styles.btn} bg-[#042a2b] hover:bg-[#042a2b]`,\n              type: \"submit\",\n              children: \"Dalej\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-4\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500\",\n              children: [\"Nie posiadasz konta? \", /*#__PURE__*/_jsxDEV(Link, {\n                className: \"text-red-500\",\n                to: \"/register\",\n                children: \"Zarejestruj\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Username, \"uIqdvO4ybEiyQkuTX4GfAbVtfm8=\", false, function () {\n  return [useNavigate, useAuthStore, useFormik];\n});\n_c = Username;\nvar _c;\n$RefreshReg$(_c, \"Username\");","map":{"version":3,"names":["React","Link","useNavigate","Toaster","useFormik","usernameValidate","useAuthStore","styles","Username","navigate","setUsername","state","formik","initialValues","username","validate","validateOnBlur","validateOnChange","onSubmit","values","handleSubmit","getFieldProps","textbox","btn"],"sources":["C:/Users/48664/Downloads/project/project/client/src/components/Username.js"],"sourcesContent":["import React from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nimport { Toaster } from 'react-hot-toast'; // Obsługa powiadomień (toastów)\nimport { useFormik } from 'formik'; // Obsługa formularzy w React\nimport { usernameValidate } from '../helper/validate' // Funkcja walidacyjna dla nazwy użytkownika\nimport { useAuthStore } from '../store/store' // Hook do zarządzania stanem autoryzacji\n\nimport styles from '../styles/Username.module.css'; // Import stylów dla komponentu\n\nexport default function Username() {\n\n  const navigate = useNavigate(); // Hook do nawigacji między stronami\n  const setUsername = useAuthStore(state => state.setUsername); // Pobranie funkcji do ustawiania nazwy użytkownika z globalnego stanu\n\n  // Konfiguracja formularza przy użyciu Formik\n  const formik = useFormik({\n    initialValues : { // Domyślne wartości pól formularza\n      username : '' // Nazwa użytkownika jako pusty string\n    },\n    validate : usernameValidate, // Funkcja walidacyjna dla nazwy użytkownika\n    validateOnBlur: false, // Wyłączenie walidacji podczas opuszczenia pola\n    validateOnChange: false, // Wyłączenie walidacji podczas zmiany wartości w polu\n    onSubmit : async values => { // Funkcja wywoływana po przesłaniu formularza\n      setUsername(values.username); // Ustawienie nazwy użytkownika w globalnym stanie\n      navigate('/password') // Przejście do strony z hasłem\n    }\n  })\n\n  return (\n    <div className=\"container mx-auto\"> {/* Kontener dla całego komponentu */}\n\n      {/* Obsługa powiadomień */}\n      <Toaster position='top-center' reverseOrder={false}></Toaster>\n\n      <div className='flex justify-center items-center h-screen'> {/* Sekcja wycentrowana w pionie i poziomie */}\n        <div className=\"w-full max-w-md\"> {/* Ustawienie maksymalnej szerokości kontenera */}\n\n          {/* Formularz */}\n          <form className='py-1' onSubmit={formik.handleSubmit}>\n\n            <div className=\"textbox flex flex-col items-center gap-7\"> {/* Sekcja dla pola tekstowego i przycisku */}\n              {/* Pole do wpisania nazwy użytkownika */}\n              <input {...formik.getFieldProps('username')} className={styles.textbox} type=\"text\" placeholder='Wpisz nazwę' />\n              {/* Przycisk do przesyłania formularza */}\n              <button className={`${styles.btn} bg-[#042a2b] hover:bg-[#042a2b]`} type='submit'>Dalej</button> {/* Zmieniono kolor */}\n            </div>\n\n            {/* Sekcja z linkiem do rejestracji */}\n            <div className=\"text-center py-4\">\n              <span className='text-gray-500'>Nie posiadasz konta? <Link className='text-red-500' to=\"/register\">Zarejestruj</Link></span>\n            </div>\n\n          </form>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAEpD,SAASC,OAAO,QAAQ,iBAAiB,CAAC,CAAC;AAC3C,SAASC,SAAS,QAAQ,QAAQ,CAAC,CAAC;AACpC,SAASC,gBAAgB,QAAQ,oBAAoB,EAAC;AACtD,SAASC,YAAY,QAAQ,gBAAgB,EAAC;;AAE9C,OAAOC,MAAM,MAAM,+BAA+B,CAAC,CAAC;AAAA;AAEpD,eAAe,SAASC,QAAQ,GAAG;EAAA;EAEjC,MAAMC,QAAQ,GAAGP,WAAW,EAAE,CAAC,CAAC;EAChC,MAAMQ,WAAW,GAAGJ,YAAY,CAACK,KAAK,IAAIA,KAAK,CAACD,WAAW,CAAC,CAAC,CAAC;;EAE9D;EACA,MAAME,MAAM,GAAGR,SAAS,CAAC;IACvBS,aAAa,EAAG;MAAE;MAChBC,QAAQ,EAAG,EAAE,CAAC;IAChB,CAAC;;IACDC,QAAQ,EAAGV,gBAAgB;IAAE;IAC7BW,cAAc,EAAE,KAAK;IAAE;IACvBC,gBAAgB,EAAE,KAAK;IAAE;IACzBC,QAAQ,EAAG,MAAMC,MAAM,IAAI;MAAE;MAC3BT,WAAW,CAACS,MAAM,CAACL,QAAQ,CAAC,CAAC,CAAC;MAC9BL,QAAQ,CAAC,WAAW,CAAC,EAAC;IACxB;EACF,CAAC,CAAC;;EAEF,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,6BAGhC,QAAC,OAAO;MAAC,QAAQ,EAAC,YAAY;MAAC,YAAY,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAW,eAE9D;MAAK,SAAS,EAAC,2CAA2C;MAAA,6BACxD;QAAK,SAAS,EAAC,iBAAiB;QAAA,6BAG9B;UAAM,SAAS,EAAC,MAAM;UAAC,QAAQ,EAAEG,MAAM,CAACQ,YAAa;UAAA,wBAEnD;YAAK,SAAS,EAAC,0CAA0C;YAAA,6BAEvD;cAAA,GAAWR,MAAM,CAACS,aAAa,CAAC,UAAU,CAAC;cAAE,SAAS,EAAEd,MAAM,CAACe,OAAQ;cAAC,IAAI,EAAC,MAAM;cAAC,WAAW,EAAC;YAAa;cAAA;cAAA;cAAA;YAAA,QAAG,eAEhH;cAAQ,SAAS,EAAG,GAAEf,MAAM,CAACgB,GAAI,kCAAkC;cAAC,IAAI,EAAC,QAAQ;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAe;UAAA;YAAA;YAAA;YAAA;UAAA,QAC5F,eAGN;YAAK,SAAS,EAAC,kBAAkB;YAAA,uBAC/B;cAAM,SAAS,EAAC,eAAe;cAAA,iDAAsB,QAAC,IAAI;gBAAC,SAAS,EAAC,cAAc;gBAAC,EAAE,EAAC,WAAW;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAmB;YAAA;cAAA;cAAA;cAAA;YAAA;UAAO;YAAA;YAAA;YAAA;UAAA,QACxH;QAAA;UAAA;UAAA;UAAA;QAAA,QAED;MAAA;QAAA;QAAA;QAAA;MAAA,QAEH;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAjDuBf,QAAQ;EAAA,QAEbN,WAAW,EACRI,YAAY,EAGjBF,SAAS;AAAA;AAAA,KANFI,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}