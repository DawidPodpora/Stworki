{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Barnaba\\\\Desktop\\\\Nowy folder\\\\client\\\\src\\\\components\\\\CreatureSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreatureSelect(_ref) {\n  _s();\n  let {\n    enemyName,\n    enemyCreatureToFightId\n  } = _ref;\n  const [speciesPhotosUser, setSpeciesPhotosUser] = useState(null);\n  const [creaturesId, setCreaturesId] = useState([]);\n  const [selectedCreture, setSelectedCreture] = useState(null);\n  const FightStart = async (enemyName, enemyCreatureToFightId, UserCreatureId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.warn('Brak tokenu w localStorage');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/api/CreaturesFightVsPlayer?enemyName=${enemyName}&enemyCreatureToFightId=${enemyCreatureToFightId}&UserCreatureId=${UserCreatureId}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        console.error('Błąd pobierania danych urzytkownika:', response.statusText);\n        return;\n      }\n      const data = await response.json();\n      console.log(data);\n      setSpeciesPhotosUser(data.speciesPhotos);\n      setCreaturesId(data.idOfCreatures);\n      if (response.bonusMessage) {\n        alert(response.bonusMessage);\n      }\n      return data;\n    } catch (error) {\n      console.error('Błąd podczas pobierania danych użytkownika:', error);\n    }\n  };\n  const dataToUse = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.warn('Brak tokenu w localStorage');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/api/CreaturesToFight`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        console.error('Błąd pobierania danych urzytkownika:', response.statusText);\n        return;\n      }\n      const data = await response.json();\n      console.log(data);\n      setSpeciesPhotosUser(data.speciesPhotos);\n      setCreaturesId(data.idOfCreatures);\n      if (response.bonusMessage) {\n        alert(response.bonusMessage);\n      }\n      return data;\n    } catch (error) {\n      console.error('Błąd podczas pobierania danych użytkownika:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchDataEfect = async () => {\n      await dataToUse();\n    };\n    fetchDataEfect();\n  }, []);\n  const changeCreatureClick = index => {\n    setSelectedCreture(index);\n  };\n  const placeForCreatue = Array(6).fill(\"\");\n  const FightClick = async (enemyName, enemyCreatureToFightId, UserCreatureId) => {\n    console.log(enemyName, \"enemyName\");\n    console.log(enemyCreatureToFightId, \"enemyCreatureToFightId\");\n    console.log(UserCreatureId, \"UserCreatureId\");\n    await FightStart(enemyName, enemyCreatureToFightId, UserCreatureId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute bg-black1 bg-opacity-90 w-full h-full items-center flex flex-col justify-center\",\n    children: [console.log(enemyName, \"enemyName\"), console.log(enemyCreatureToFightId, \"enemyCreatureToFightId\"), speciesPhotosUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 grid-rows-2 gap-[1vw] w-[50vw] h-[60vh]  pl-[2vw]\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: placeForCreatue.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full aspect-square border-8 border-maincolor4 rounded-2xl\",\n          children: speciesPhotosUser[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: selectedCreture === index ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"border-4 rounded-md border-maincolor5\",\n              src: `images/${speciesPhotosUser[index][0]}.png`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 52\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => changeCreatureClick(index),\n              src: `images/${speciesPhotosUser[index][0]}.png`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 24\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this))\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-[100%] mr-[120%] w-full h-[5vh] bg-gradient-to-r from-maincolor3 to-maincolor5 rounded-full text-center flex flex-col justify-center items-center\",\n        onClick: () => FightClick(enemyName, enemyCreatureToFightId, creaturesId[selectedCreture]),\n        children: \"FIGHT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 12\n  }, this);\n}\n_s(CreatureSelect, \"YmykBpPBRZsaOonqAF9rbAw5FTM=\");\n_c = CreatureSelect;\nexport default CreatureSelect;\nvar _c;\n$RefreshReg$(_c, \"CreatureSelect\");","map":{"version":3,"names":["React","useEffect","useState","CreatureSelect","enemyName","enemyCreatureToFightId","speciesPhotosUser","setSpeciesPhotosUser","creaturesId","setCreaturesId","selectedCreture","setSelectedCreture","FightStart","UserCreatureId","token","localStorage","getItem","console","warn","response","fetch","method","headers","ok","error","statusText","data","json","log","speciesPhotos","idOfCreatures","bonusMessage","alert","dataToUse","fetchDataEfect","changeCreatureClick","index","placeForCreatue","Array","fill","FightClick","map","_"],"sources":["C:/Users/Barnaba/Desktop/Nowy folder/client/src/components/CreatureSelect.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CreatureSelect({enemyName, enemyCreatureToFightId}){\r\n    const [speciesPhotosUser, setSpeciesPhotosUser] = useState(null);\r\n    const [creaturesId, setCreaturesId] = useState([]);\r\n    const [selectedCreture, setSelectedCreture] = useState(null);\r\n    const FightStart = async (enemyName, enemyCreatureToFightId, UserCreatureId) =>{\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            console.warn('Brak tokenu w localStorage');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/CreaturesFightVsPlayer?enemyName=${enemyName}&enemyCreatureToFightId=${enemyCreatureToFightId}&UserCreatureId=${UserCreatureId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                console.error('Błąd pobierania danych urzytkownika:', response.statusText);\r\n                return;\r\n            }\r\n            \r\n            const data = await response.json();\r\n            console.log(data)\r\n            setSpeciesPhotosUser(data.speciesPhotos);\r\n            setCreaturesId(data.idOfCreatures);\r\n            if (response.bonusMessage) {\r\n              alert(response.bonusMessage);\r\n          }\r\n            return data;\r\n            \r\n        } catch (error) {\r\n            console.error('Błąd podczas pobierania danych użytkownika:', error);\r\n        }\r\n    }\r\n\r\n    const dataToUse = async ()=> {\r\n        \r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            console.warn('Brak tokenu w localStorage');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/CreaturesToFight`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                console.error('Błąd pobierania danych urzytkownika:', response.statusText);\r\n                return;\r\n            }\r\n            \r\n            const data = await response.json();\r\n            console.log(data);\r\n            setSpeciesPhotosUser(data.speciesPhotos);\r\n            setCreaturesId(data.idOfCreatures);\r\n            if (response.bonusMessage) {\r\n              alert(response.bonusMessage);\r\n          }\r\n            return data;\r\n            \r\n        } catch (error) {\r\n            console.error('Błąd podczas pobierania danych użytkownika:', error);\r\n        }\r\n      };\r\n      useEffect(()=>{\r\n        const fetchDataEfect = async()=>{\r\n            await dataToUse();\r\n        };\r\n        fetchDataEfect();\r\n      },[]);\r\n      const changeCreatureClick=(index)=>\r\n      {\r\n        setSelectedCreture(index);\r\n      }\r\n      const placeForCreatue = Array(6).fill(\"\");\r\n\r\n\r\n\r\n      const FightClick = async(enemyName, enemyCreatureToFightId, UserCreatureId)=>{\r\n        console.log(enemyName,\"enemyName\");\r\n        console.log(enemyCreatureToFightId,\"enemyCreatureToFightId\");\r\n        console.log(UserCreatureId,\"UserCreatureId\");\r\n        await FightStart(enemyName, enemyCreatureToFightId, UserCreatureId);\r\n      }\r\n\r\n\r\n    return(<div className=\"absolute bg-black1 bg-opacity-90 w-full h-full items-center flex flex-col justify-center\" >\r\n        {console.log(enemyName,\"enemyName\")}\r\n        {console.log(enemyCreatureToFightId,\"enemyCreatureToFightId\")}\r\n        \r\n        {speciesPhotosUser?(\r\n        <div className=\"grid grid-cols-3 grid-rows-2 gap-[1vw] w-[50vw] h-[60vh]  pl-[2vw]\">\r\n            <>\r\n            {placeForCreatue.map((_,index)=>(\r\n                \r\n                <div key={index} className=\"h-full aspect-square border-8 border-maincolor4 rounded-2xl\">\r\n                {speciesPhotosUser[index]?\r\n                    (<>{selectedCreture === index?(<img className=\"border-4 rounded-md border-maincolor5\" src={`images/${speciesPhotosUser[index][0]}.png`}></img>\r\n                    ):(<img onClick={()=>changeCreatureClick(index)} src={`images/${speciesPhotosUser[index][0]}.png`}></img>)}</>\r\n                ):(<></>)}\r\n                </div>\r\n            ))\r\n\r\n            }\r\n            </>\r\n            <button className=\"ml-[100%] mr-[120%] w-full h-[5vh] bg-gradient-to-r from-maincolor3 to-maincolor5 rounded-full text-center flex flex-col justify-center items-center\" onClick={()=>FightClick(enemyName, enemyCreatureToFightId, creaturesId[selectedCreture])}>FIGHT</button>\r\n        </div>\r\n        ):(<div>Loading</div>)}\r\n    </div>);\r\n}\r\nexport default CreatureSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}